{
	"id": "d9b608a9b70f83c9ef0314863e9e5d1a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"evmVersion": "byzantium"
		},
		"sources": {
			"contracts/Loren.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.5;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\";\n\ncontract MyERC20 is ERC20 {\n  uint256 public token_transfer_count = 0;\n\n  constructor () ERC20(\"Token\", \"TKN\") {\n    _mint(msg.sender, 1000 ether);\n  }\n\n    // This is public only for tests\n  function mint(address account, uint256 amount) public {\n    _mint(account, amount);\n  }\n\n  function burn(address account, uint256 amount) public {\n    _burn(account, amount);\n  }\n\n  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override\n  {\n    token_transfer_count += 1;\n  }\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Loren.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token_transfer_count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Loren.sol\":166:670  contract MyERC20 is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Loren.sol\":234:235  0 */\n  0x00\n    /* \"contracts/Loren.sol\":196:235  uint256 public token_transfer_count = 0 */\n  0x05\n  sstore\n    /* \"contracts/Loren.sol\":240:317  constructor () ERC20(\"Token\", \"TKN\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1898:2012  constructor (string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x546f6b656e000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x544b4e0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1973:1978  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1965:1970  _name */\n  0x03\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1965:1978  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1988:2005  _symbol = symbol_ */\n  dup1\n  mload\n  tag_7\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1988:1995  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1988:2005  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1898:2012  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Loren.sol\":283:312  _mint(msg.sender, 1000 ether) */\n  tag_9\n    /* \"contracts/Loren.sol\":289:299  msg.sender */\n  caller\n    /* \"contracts/Loren.sol\":301:311  1000 ether */\n  0x3635c9adc5dea00000\n    /* \"contracts/Loren.sol\":283:288  _mint */\n  mul(0x0100000000, tag_10)\n    /* \"contracts/Loren.sol\":283:312  _mint(msg.sender, 1000 ether) */\n  0x0100000000\n  swap1\n  div\n  jump\t// in\ntag_9:\n    /* \"contracts/Loren.sol\":166:670  contract MyERC20 is ERC20 {... */\n  jump(tag_36)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8023:8353  function _mint(address account, uint256 amount) internal virtual {... */\ntag_10:\n  sub(exp(0x02, 0xa0), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8106:8127  account != address(0) */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_13\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x1f\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:327   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:328   */\n  mstore\n    /* \"#utility.yul\":345:363   */\n  0x64\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_13:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8174:8223  _beforeTokenTransfer(address(0), account, amount) */\n  tag_16\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8203:8204  0 */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8207:8214  account */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8216:8222  amount */\n  dup4\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8174:8194  _beforeTokenTransfer */\n  0x0100000000\n  tag_17\n  dup2\n  mul\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8174:8223  _beforeTokenTransfer(address(0), account, amount) */\n  div\n  jump\t// in\ntag_16:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8250:8256  amount */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8234:8246  _totalSupply */\n  0x02\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8234:8256  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(exp(0x02, 0xa0), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8284  _balances[account] */\n  dup3\n  and\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8275  _balances */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8284  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8294  _balances[account] += amount */\n  dup1\n  sload\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8288:8294  amount */\n  dup4\n  swap3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8275  _balances */\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8294  _balances[account] += amount */\n  tag_20\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8288:8294  amount */\n  dup5\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8294  _balances[account] += amount */\n  tag_19\n  jump\t// in\ntag_20:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":520:545   */\n  dup2\n  dup2\n  mstore\n  sub(exp(0x02, 0xa0), 0x01)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8326:8327  0 */\n  0x00\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":508:510   */\n  0x20\n    /* \"#utility.yul\":493:511   */\n  add\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8023:8353  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Loren.sol\":540:668  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override... */\ntag_17:\n    /* \"contracts/Loren.sol\":662:663  1 */\n  0x01\n    /* \"contracts/Loren.sol\":638:658  token_transfer_count */\n  0x05\n  0x00\n    /* \"contracts/Loren.sol\":638:663  token_transfer_count += 1 */\n  dup3\n  dup3\n  sload\n  tag_24\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_24:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/Loren.sol\":540:668  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override... */\n  jump\t// out\n    /* \"contracts/Loren.sol\":166:670  contract MyERC20 is ERC20 {... */\ntag_6:\n  dup3\n  dup1\n  sload\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_28\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_31)\ntag_28:\n  dup3\n  0x1f\n  lt\n  tag_29\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_31)\ntag_29:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_31\n  jumpi\n  swap2\n  dup3\n  add\ntag_30:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_30)\ntag_31:\n  pop\n  tag_32\n  swap3\n  swap2\n  pop\n  tag_33\n  jump\t// in\ntag_32:\n  pop\n  swap1\n  jump\t// out\ntag_33:\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_34)\n    /* \"#utility.yul\":556:838   */\ntag_19:\n    /* \"#utility.yul\":596:599   */\n  0x00\n    /* \"#utility.yul\":627:628   */\n  dup3\n    /* \"#utility.yul\":623:629   */\n  not\n    /* \"#utility.yul\":620:621   */\n  dup3\n    /* \"#utility.yul\":617:630   */\n  gt\n    /* \"#utility.yul\":614:616   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":663:740   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":660:661   */\n  0x00\n    /* \"#utility.yul\":653:741   */\n  mstore\n    /* \"#utility.yul\":764:768   */\n  0x11\n    /* \"#utility.yul\":761:762   */\n  0x04\n    /* \"#utility.yul\":754:769   */\n  mstore\n    /* \"#utility.yul\":792:796   */\n  0x24\n    /* \"#utility.yul\":789:790   */\n  0x00\n    /* \"#utility.yul\":782:797   */\n  revert\n    /* \"#utility.yul\":614:616   */\ntag_40:\n  pop\n    /* \"#utility.yul\":823:832   */\n  add\n  swap1\n    /* \"#utility.yul\":604:838   */\n  jump\t// out\n    /* \"#utility.yul\":843:1280   */\ntag_26:\n    /* \"#utility.yul\":928:929   */\n  0x02\n    /* \"#utility.yul\":918:930   */\n  dup2\n  div\n    /* \"#utility.yul\":975:976   */\n  0x01\n    /* \"#utility.yul\":965:977   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":986:988   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1040:1044   */\n  0x7f\n    /* \"#utility.yul\":1032:1038   */\n  dup3\n    /* \"#utility.yul\":1028:1045   */\n  and\n    /* \"#utility.yul\":1018:1045   */\n  swap2\n  pop\n    /* \"#utility.yul\":986:988   */\ntag_42:\n    /* \"#utility.yul\":1093:1095   */\n  0x20\n    /* \"#utility.yul\":1085:1091   */\n  dup3\n    /* \"#utility.yul\":1082:1096   */\n  lt\n    /* \"#utility.yul\":1062:1080   */\n  dup2\n    /* \"#utility.yul\":1059:1097   */\n  eq\n    /* \"#utility.yul\":1056:1058   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1130:1207   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1127:1128   */\n  0x00\n    /* \"#utility.yul\":1120:1208   */\n  mstore\n    /* \"#utility.yul\":1231:1235   */\n  0x22\n    /* \"#utility.yul\":1228:1229   */\n  0x04\n    /* \"#utility.yul\":1221:1236   */\n  mstore\n    /* \"#utility.yul\":1259:1263   */\n  0x24\n    /* \"#utility.yul\":1256:1257   */\n  0x00\n    /* \"#utility.yul\":1249:1264   */\n  revert\n    /* \"#utility.yul\":1056:1058   */\ntag_43:\n  pop\n    /* \"#utility.yul\":898:1280   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_36:\n    /* \"contracts/Loren.sol\":166:670  contract MyERC20 is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Loren.sol\":166:670  contract MyERC20 is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x40c10f19\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x18160ddd\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x160f00c1\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2077:2175  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1428:1442   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1421:1443   */\n      iszero\n        /* \"#utility.yul\":1403:1444   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1376:1394   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_22\n        /* \"#utility.yul\":1358:1450   */\n      jump\n        /* \"contracts/Loren.sol\":196:235  uint256 public token_transfer_count = 0 */\n    tag_5:\n      tag_30\n      sload(0x05)\n      dup2\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":6208:6233   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6181:6199   */\n      add\n        /* \"contracts/Loren.sol\":196:235  uint256 public token_transfer_count = 0 */\n      tag_22\n        /* \"#utility.yul\":6163:6239   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3165:3271  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3252:3264  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3165:3271  function totalSupply() public view virtual override returns (uint256) {... */\n      jump(tag_30)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4807:5221  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_7:\n      tag_24\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3014:3105  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3096:3098  18 */\n      0x12\n        /* \"#utility.yul\":6386:6422   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6374:6376   */\n      0x20\n        /* \"#utility.yul\":6359:6377   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3014:3105  function decimals() public view virtual override returns (uint8) {... */\n      tag_22\n        /* \"#utility.yul\":6341:6428   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5616:5828  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_24\n      tag_47\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"contracts/Loren.sol\":358:445  function mint(address account, uint256 amount) public {... */\n    tag_10:\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3329:3454  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_11:\n      tag_30\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3429:3447  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3403:3410  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3429:3447  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3329:3454  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2288:2390  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      tag_20\n      tag_59\n      jump\t// in\n        /* \"contracts/Loren.sol\":449:536  function burn(address account, uint256 amount) public {... */\n    tag_13:\n      tag_50\n      tag_62\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6315:6686  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_24\n      tag_65\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3657:3829  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_24\n      tag_69\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3887:4036  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_16:\n      tag_30\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4020  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3976:3983  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4020  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4013  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4020  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4029  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3887:4036  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2077:2175  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2131:2144  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2163:2168  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2156:2168  return _name */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_80\n      swap1\n      tag_79\n      jump\t// in\n    tag_80:\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_82\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_81)\n    tag_82:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_83:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_83\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_81:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2077:2175  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_27:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4257:4261  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4273:4312  _approve(_msgSender(), spender, amount) */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4296:4303  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4305:4311  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4273:4281  _approve */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4273:4312  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_85:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4329:4333  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4807:5221  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4913:4917  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4929:4965  _transfer(sender, recipient, amount) */\n      tag_91\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4939:4945  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4947:4956  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4958:4964  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4929:4938  _transfer */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4929:4965  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_91:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5022  _allowances[sender] */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4976:5000  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5022  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5014  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5022  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5036  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5054:5080  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5046:5125  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3876:3878   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5046:5125  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3858:3879   */\n      mstore\n        /* \"#utility.yul\":3915:3917   */\n      0x28\n        /* \"#utility.yul\":3895:3913   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3888:3918   */\n      mstore\n        /* \"#utility.yul\":3954:3988   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3934:3952   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3927:3989   */\n      mstore\n        /* \"#utility.yul\":4025:4035   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4005:4023   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3998:4036   */\n      mstore\n        /* \"#utility.yul\":4053:4072   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5046:5125  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5135:5192  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5144:5150  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5166:5191  currentAllowance - amount */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5185:5191  amount */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5166:5182  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5166:5191  currentAllowance - amount */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5135:5143  _approve */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5135:5192  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_97:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5210:5214  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4807:5221  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5616:5828  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5704:5708  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5777  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5763  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5777  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5786  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5704:5708  bool */\n      swap1\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5720:5800  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_85\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5743:5750  spender */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5799  _allowances[_msgSender()][spender] + addedValue */\n      tag_99\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5789:5799  addedValue */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5799  _allowances[_msgSender()][spender] + addedValue */\n      tag_107\n      jump\t// in\n        /* \"contracts/Loren.sol\":358:445  function mint(address account, uint256 amount) public {... */\n    tag_52:\n        /* \"contracts/Loren.sol\":418:440  _mint(account, amount) */\n      tag_109\n        /* \"contracts/Loren.sol\":424:431  account */\n      dup3\n        /* \"contracts/Loren.sol\":433:439  amount */\n      dup3\n        /* \"contracts/Loren.sol\":418:423  _mint */\n      tag_110\n        /* \"contracts/Loren.sol\":418:440  _mint(account, amount) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/Loren.sol\":358:445  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2288:2390  function symbol() public view virtual override returns (string memory) {... */\n    tag_59:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2344:2357  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2376:2383  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2369:2383  return _symbol */\n      dup1\n      sload\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n        /* \"contracts/Loren.sol\":449:536  function burn(address account, uint256 amount) public {... */\n    tag_63:\n        /* \"contracts/Loren.sol\":509:531  _burn(account, amount) */\n      tag_109\n        /* \"contracts/Loren.sol\":515:522  account */\n      dup3\n        /* \"contracts/Loren.sol\":524:530  amount */\n      dup3\n        /* \"contracts/Loren.sol\":509:514  _burn */\n      tag_120\n        /* \"contracts/Loren.sol\":509:531  _burn(account, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6315:6686  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_66:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6408:6412  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6476  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6462  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6476  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6485  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6503:6538  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":5498:5500   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5480:5501   */\n      mstore\n        /* \"#utility.yul\":5537:5539   */\n      0x25\n        /* \"#utility.yul\":5517:5535   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5510:5540   */\n      mstore\n        /* \"#utility.yul\":5576:5610   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":5556:5574   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5549:5611   */\n      mstore\n        /* \"#utility.yul\":5647:5654   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5627:5645   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5620:5655   */\n      mstore\n        /* \"#utility.yul\":5672:5691   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_95\n        /* \"#utility.yul\":5470:5697   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6590:6657  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_126\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6613:6620  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6622:6656  currentAllowance - subtractedValue */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6641:6656  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6622:6638  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6622:6656  currentAllowance - subtractedValue */\n      tag_100\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6590:6657  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_126:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6675:6679  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6315:6686  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3657:3829  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3743:3747  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3759:3801  _transfer(_msgSender(), recipient, amount) */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3783:3792  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3794:3800  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3759:3768  _transfer */\n      tag_92\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3759:3801  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9579:9919  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_88:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9680:9699  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":5093:5095   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5075:5096   */\n      mstore\n        /* \"#utility.yul\":5132:5134   */\n      0x24\n        /* \"#utility.yul\":5112:5130   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5105:5135   */\n      mstore\n        /* \"#utility.yul\":5171:5205   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":5151:5169   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5144:5206   */\n      mstore\n        /* \"#utility.yul\":5242:5248   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5222:5240   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5215:5249   */\n      mstore\n        /* \"#utility.yul\":5266:5285   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":5065:5291   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_135:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9758:9779  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3066:3068   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3048:3069   */\n      mstore\n        /* \"#utility.yul\":3105:3107   */\n      0x22\n        /* \"#utility.yul\":3085:3103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3078:3108   */\n      mstore\n        /* \"#utility.yul\":3144:3178   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3117:3179   */\n      mstore\n        /* \"#utility.yul\":3215:3219   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3195:3213   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3188:3220   */\n      mstore\n        /* \"#utility.yul\":3237:3256   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":3038:3262   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_138:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9847  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9840  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9847  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9856  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9865  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9880:9912  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":6208:6233   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9880:9912  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":6181:6199   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9880:9912  Approval(owner, spender, amount) */\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9579:9919  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7160:7752  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_92:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7265:7285  sender != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4687:4689   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4669:4690   */\n      mstore\n        /* \"#utility.yul\":4726:4728   */\n      0x25\n        /* \"#utility.yul\":4706:4724   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4699:4729   */\n      mstore\n        /* \"#utility.yul\":4765:4799   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4745:4763   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4738:4800   */\n      mstore\n        /* \"#utility.yul\":4836:4843   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4816:4834   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4809:4844   */\n      mstore\n        /* \"#utility.yul\":4861:4880   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":4659:4886   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_143:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7345:7368  recipient != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2259:2261   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2241:2262   */\n      mstore\n        /* \"#utility.yul\":2298:2300   */\n      0x23\n        /* \"#utility.yul\":2278:2296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2271:2301   */\n      mstore\n        /* \"#utility.yul\":2337:2371   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2317:2335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2310:2372   */\n      mstore\n        /* \"#utility.yul\":2408:2413   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2388:2406   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2381:2414   */\n      mstore\n        /* \"#utility.yul\":2431:2450   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":2231:2456   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7419:7466  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_149\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7440:7446  sender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7448:7457  recipient */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7459:7465  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7419:7439  _beforeTokenTransfer */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7419:7466  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_149:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7501:7518  _balances[sender] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7477:7498  uint256 senderBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7501:7518  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7536:7559  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3469:3471   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3451:3472   */\n      mstore\n        /* \"#utility.yul\":3508:3510   */\n      0x26\n        /* \"#utility.yul\":3488:3506   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3481:3511   */\n      mstore\n        /* \"#utility.yul\":3547:3581   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3527:3545   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3520:3582   */\n      mstore\n        /* \"#utility.yul\":3618:3626   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3598:3616   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3591:3627   */\n      mstore\n        /* \"#utility.yul\":3644:3663   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_95\n        /* \"#utility.yul\":3441:3669   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_151:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7632:7654  senderBalance - amount */\n      tag_154\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7648:7654  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7632:7645  senderBalance */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7632:7654  senderBalance - amount */\n      tag_100\n      jump\t// in\n    tag_154:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7629  _balances[sender] */\n      dup1\n      dup7\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7621  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7629  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7654  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7684  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7694  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7688:7694  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7621  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7694  _balances[recipient] += amount */\n      tag_155\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7688:7694  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7694  _balances[recipient] += amount */\n      tag_107\n      jump\t// in\n    tag_155:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7727:7736  recipient */\n      dup3\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7719:7725  sender */\n      dup5\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7738:7744  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_156\n      swap2\n        /* \"#utility.yul\":6208:6233   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6181:6199   */\n      add\n      swap1\n        /* \"#utility.yul\":6163:6239   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7247:7752  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7160:7752  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8023:8353  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_110:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8106:8127  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":5904:5906   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5886:5907   */\n      mstore\n        /* \"#utility.yul\":5943:5945   */\n      0x1f\n        /* \"#utility.yul\":5923:5941   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5916:5946   */\n      mstore\n        /* \"#utility.yul\":5982:6015   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":5962:5980   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5955:6016   */\n      mstore\n        /* \"#utility.yul\":6033:6051   */\n      0x64\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_95\n        /* \"#utility.yul\":5876:6057   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8098:8163  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8174:8223  _beforeTokenTransfer(address(0), account, amount) */\n      tag_161\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8203:8204  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8207:8214  account */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8216:8222  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8174:8194  _beforeTokenTransfer */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8174:8223  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_161:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8250:8256  amount */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8234:8246  _totalSupply */\n      0x02\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8234:8256  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_162\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8284  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8275  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8284  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8294  _balances[account] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8288:8294  amount */\n      dup4\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8275  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8294  _balances[account] += amount */\n      tag_163\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8288:8294  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8266:8294  _balances[account] += amount */\n      tag_107\n      jump\t// in\n    tag_163:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6208:6233   */\n      dup2\n      dup2\n      mstore\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8326:8327  0 */\n      0x00\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6181:6199   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8309:8346  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8023:8353  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8673:9156  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_120:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8756:8777  account != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8748:8815  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4285:4287   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8748:8815  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4267:4288   */\n      mstore\n        /* \"#utility.yul\":4324:4326   */\n      0x21\n        /* \"#utility.yul\":4304:4322   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4297:4327   */\n      mstore\n        /* \"#utility.yul\":4363:4397   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":4343:4361   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4336:4398   */\n      mstore\n        /* \"#utility.yul\":4434:4437   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4414:4432   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4407:4438   */\n      mstore\n        /* \"#utility.yul\":4455:4474   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8748:8815  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_95\n        /* \"#utility.yul\":4257:4480   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8748:8815  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8826:8875  _beforeTokenTransfer(account, address(0), amount) */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8847:8854  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8864:8865  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8868:8874  amount */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8826:8846  _beforeTokenTransfer */\n      tag_150\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8826:8875  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_169:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8911:8929  _balances[account] */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8886:8908  uint256 accountBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8911:8929  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8947:8971  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8939:9010  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2663:2665   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8939:9010  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2645:2666   */\n      mstore\n        /* \"#utility.yul\":2702:2704   */\n      0x22\n        /* \"#utility.yul\":2682:2700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2675:2705   */\n      mstore\n        /* \"#utility.yul\":2741:2775   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":2721:2739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2714:2776   */\n      mstore\n        /* \"#utility.yul\":2812:2816   */\n      0x6365000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2792:2810   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2785:2817   */\n      mstore\n        /* \"#utility.yul\":2834:2853   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8939:9010  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_95\n        /* \"#utility.yul\":2635:2859   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":8939:9010  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_170:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9041:9064  accountBalance - amount */\n      tag_173\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9058:9064  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9041:9055  accountBalance */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9041:9064  accountBalance - amount */\n      tag_100\n      jump\t// in\n    tag_173:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9020:9038  _balances[account] */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9020:9029  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9020:9038  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9020:9064  _balances[account] = accountBalance - amount */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9074:9086  _totalSupply */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9074:9096  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9090:9096  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9020:9029  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9074:9096  _totalSupply -= amount */\n      tag_174\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9090:9096  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9074:9096  _totalSupply -= amount */\n      tag_100\n      jump\t// in\n    tag_174:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9112:9149  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":6208:6233   */\n      dup3\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9138:9139  0 */\n      0x00\n      swap1\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9112:9149  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6181:6199   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9112:9149  Transfer(account, address(0), amount) */\n      tag_141\n        /* \"#utility.yul\":6163:6239   */\n      jump\n        /* \"contracts/Loren.sol\":540:668  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override... */\n    tag_150:\n        /* \"contracts/Loren.sol\":662:663  1 */\n      0x01\n        /* \"contracts/Loren.sol\":638:658  token_transfer_count */\n      0x05\n      0x00\n        /* \"contracts/Loren.sol\":638:663  token_transfer_count += 1 */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_177:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Loren.sol\":540:668  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override... */\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_179:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_181:\n        /* \"#utility.yul\":63:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_55:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:297   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:297   */\n    tag_183:\n        /* \"#utility.yul\":366:395   */\n      tag_184\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_179\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":285:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:666   */\n    tag_74:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:505   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:505   */\n    tag_186:\n        /* \"#utility.yul\":574:603   */\n      tag_187\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_179\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_188\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_179\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":493:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_39:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:787   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:787   */\n    tag_190:\n        /* \"#utility.yul\":856:885   */\n      tag_191\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_179\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_192\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_179\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":775:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:1258   */\n    tag_26:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1080:1086   */\n      dup1\n        /* \"#utility.yul\":1133:1135   */\n      0x40\n        /* \"#utility.yul\":1121:1130   */\n      dup4\n        /* \"#utility.yul\":1112:1119   */\n      dup6\n        /* \"#utility.yul\":1108:1131   */\n      sub\n        /* \"#utility.yul\":1104:1136   */\n      slt\n        /* \"#utility.yul\":1101:1103   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":1149:1150   */\n      0x00\n        /* \"#utility.yul\":1146:1147   */\n      dup1\n        /* \"#utility.yul\":1139:1151   */\n      revert\n        /* \"#utility.yul\":1101:1103   */\n    tag_194:\n        /* \"#utility.yul\":1172:1201   */\n      tag_195\n        /* \"#utility.yul\":1191:1200   */\n      dup4\n        /* \"#utility.yul\":1172:1201   */\n      tag_179\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":1162:1201   */\n      swap5\n        /* \"#utility.yul\":1248:1250   */\n      0x20\n        /* \"#utility.yul\":1233:1251   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1220:1252   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1091:1258   */\n      jump\t// out\n        /* \"#utility.yul\":1455:2052   */\n    tag_23:\n        /* \"#utility.yul\":1567:1571   */\n      0x00\n        /* \"#utility.yul\":1596:1598   */\n      0x20\n        /* \"#utility.yul\":1625:1627   */\n      dup1\n        /* \"#utility.yul\":1614:1623   */\n      dup4\n        /* \"#utility.yul\":1607:1628   */\n      mstore\n        /* \"#utility.yul\":1657:1663   */\n      dup4\n        /* \"#utility.yul\":1651:1664   */\n      mload\n        /* \"#utility.yul\":1700:1706   */\n      dup1\n        /* \"#utility.yul\":1695:1697   */\n      dup3\n        /* \"#utility.yul\":1684:1693   */\n      dup6\n        /* \"#utility.yul\":1680:1698   */\n      add\n        /* \"#utility.yul\":1673:1707   */\n      mstore\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1735:1875   */\n    tag_198:\n        /* \"#utility.yul\":1749:1755   */\n      dup2\n        /* \"#utility.yul\":1746:1747   */\n      dup2\n        /* \"#utility.yul\":1743:1756   */\n      lt\n        /* \"#utility.yul\":1735:1875   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1844:1858   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1840:1863   */\n      dup4\n      add\n        /* \"#utility.yul\":1834:1864   */\n      mload\n        /* \"#utility.yul\":1810:1827   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1829:1831   */\n      0x40\n        /* \"#utility.yul\":1806:1832   */\n      add\n        /* \"#utility.yul\":1799:1865   */\n      mstore\n        /* \"#utility.yul\":1764:1774   */\n      dup3\n      add\n        /* \"#utility.yul\":1735:1875   */\n      jump(tag_198)\n    tag_200:\n        /* \"#utility.yul\":1893:1899   */\n      dup2\n        /* \"#utility.yul\":1890:1891   */\n      dup2\n        /* \"#utility.yul\":1887:1900   */\n      gt\n        /* \"#utility.yul\":1884:1886   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1958:1960   */\n      0x40\n        /* \"#utility.yul\":1949:1955   */\n      dup4\n        /* \"#utility.yul\":1938:1947   */\n      dup8\n        /* \"#utility.yul\":1934:1956   */\n      add\n        /* \"#utility.yul\":1930:1961   */\n      add\n        /* \"#utility.yul\":1923:1965   */\n      mstore\n        /* \"#utility.yul\":1884:1886   */\n    tag_201:\n      pop\n        /* \"#utility.yul\":2036:2038   */\n      0x1f\n        /* \"#utility.yul\":2015:2030   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2011:2040   */\n      and\n        /* \"#utility.yul\":1996:2041   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":1992:2046   */\n      add\n      swap4\n        /* \"#utility.yul\":1576:2052   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6433:6561   */\n    tag_107:\n        /* \"#utility.yul\":6473:6476   */\n      0x00\n        /* \"#utility.yul\":6504:6505   */\n      dup3\n        /* \"#utility.yul\":6500:6506   */\n      not\n        /* \"#utility.yul\":6497:6498   */\n      dup3\n        /* \"#utility.yul\":6494:6507   */\n      gt\n        /* \"#utility.yul\":6491:6493   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":6510:6528   */\n      tag_216\n      tag_217\n      jump\t// in\n    tag_216:\n      pop\n        /* \"#utility.yul\":6546:6555   */\n      add\n      swap1\n        /* \"#utility.yul\":6481:6561   */\n      jump\t// out\n        /* \"#utility.yul\":6566:6691   */\n    tag_100:\n        /* \"#utility.yul\":6606:6610   */\n      0x00\n        /* \"#utility.yul\":6634:6635   */\n      dup3\n        /* \"#utility.yul\":6631:6632   */\n      dup3\n        /* \"#utility.yul\":6628:6636   */\n      lt\n        /* \"#utility.yul\":6625:6627   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":6639:6657   */\n      tag_220\n      tag_217\n      jump\t// in\n    tag_220:\n      pop\n        /* \"#utility.yul\":6676:6685   */\n      sub\n      swap1\n        /* \"#utility.yul\":6615:6691   */\n      jump\t// out\n        /* \"#utility.yul\":6696:7133   */\n    tag_79:\n        /* \"#utility.yul\":6781:6782   */\n      0x02\n        /* \"#utility.yul\":6771:6783   */\n      dup2\n      div\n        /* \"#utility.yul\":6828:6829   */\n      0x01\n        /* \"#utility.yul\":6818:6830   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6839:6841   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":6893:6897   */\n      0x7f\n        /* \"#utility.yul\":6885:6891   */\n      dup3\n        /* \"#utility.yul\":6881:6898   */\n      and\n        /* \"#utility.yul\":6871:6898   */\n      swap2\n      pop\n        /* \"#utility.yul\":6839:6841   */\n    tag_222:\n        /* \"#utility.yul\":6946:6948   */\n      0x20\n        /* \"#utility.yul\":6938:6944   */\n      dup3\n        /* \"#utility.yul\":6935:6949   */\n      lt\n        /* \"#utility.yul\":6915:6933   */\n      dup2\n        /* \"#utility.yul\":6912:6950   */\n      eq\n        /* \"#utility.yul\":6909:6911   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6983:7060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6980:6981   */\n      0x00\n        /* \"#utility.yul\":6973:7061   */\n      mstore\n        /* \"#utility.yul\":7084:7088   */\n      0x22\n        /* \"#utility.yul\":7081:7082   */\n      0x04\n        /* \"#utility.yul\":7074:7089   */\n      mstore\n        /* \"#utility.yul\":7112:7116   */\n      0x24\n        /* \"#utility.yul\":7109:7110   */\n      0x00\n        /* \"#utility.yul\":7102:7117   */\n      revert\n        /* \"#utility.yul\":6909:6911   */\n    tag_223:\n      pop\n        /* \"#utility.yul\":6751:7133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7138:7322   */\n    tag_217:\n        /* \"#utility.yul\":7190:7267   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7187:7188   */\n      0x00\n        /* \"#utility.yul\":7180:7268   */\n      mstore\n        /* \"#utility.yul\":7287:7291   */\n      0x11\n        /* \"#utility.yul\":7284:7285   */\n      0x04\n        /* \"#utility.yul\":7277:7292   */\n      mstore\n        /* \"#utility.yul\":7311:7315   */\n      0x24\n        /* \"#utility.yul\":7308:7309   */\n      0x00\n        /* \"#utility.yul\":7301:7316   */\n      revert\n\n    auxdata: 0xa2646970667358221220033bfd3bc8bee4fd2819dd9eedafa7f16867ccc876b4f827d4fc18cecc2c813164736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_62": {
									"entryPoint": 503,
									"id": 62,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_451": {
									"entryPoint": 222,
									"id": 451,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1282:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "360:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "345:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "337:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:5",
														"type": ""
													}
												],
												"src": "14:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "497:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "508:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "493:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "485:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "527:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "538:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "520:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "520:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "520:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "444:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "455:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "466:4:5",
														"type": ""
													}
												],
												"src": "374:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:234:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "639:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "663:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "653:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "653:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "653:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "761:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "764:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "754:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "754:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "754:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "789:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "792:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "782:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "782:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "782:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "620:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "627:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "623:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "623:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "617:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:13:5"
															},
															"nodeType": "YulIf",
															"src": "614:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "816:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "827:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "830:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "823:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "816:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "587:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "590:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "596:3:5",
														"type": ""
													}
												],
												"src": "556:282:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:382:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "922:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "928:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "939:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "969:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "975:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "965:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "965:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "943:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1016:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1018:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1032:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1028:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1028:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1018:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "996:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "989:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "989:26:5"
															},
															"nodeType": "YulIf",
															"src": "986:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1106:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1127:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1130:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1120:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1120:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1120:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1228:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1231:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1221:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1221:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1259:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1249:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1062:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1085:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1093:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1082:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1082:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1059:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1059:38:5"
															},
															"nodeType": "YulIf",
															"src": "1056:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "878:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "887:6:5",
														"type": ""
													}
												],
												"src": "843:437:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260006005553480156200001657600080fd5b506040518060400160405280600581526020017f546f6b656e0000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f544b4e000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200009b92919062000216565b508051620000b190600490602084019062000216565b505050620000d833683635c9adc5dea00000620000de640100000000026401000000009004565b62000352565b600160a060020a03821662000153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b6200016a60008383640100000000620001f7810204565b80600260008282546200017e9190620002bc565b9091555050600160a060020a03821660009081526020819052604081208054839290620001ad908490620002bc565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600560008282546200020c9190620002bc565b9091555050505050565b8280546200022490620002fc565b90600052602060002090601f01602090048101928262000248576000855562000293565b82601f106200026357805160ff191683800117855562000293565b8280016001018555821562000293579182015b828111156200029357825182559160200191906001019062000276565b50620002a1929150620002a5565b5090565b5b80821115620002a15760008155600101620002a6565b60008219821115620002f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6002810460018216806200031157607f821691505b602082108114156200034c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b610d3b80620003626000396000f3fe608060405234801561001057600080fd5b5060043610610107576000357c01000000000000000000000000000000000000000000000000000000009004806340c10f19116100a95780639dc29fac116100835780639dc29fac146101e7578063a457c2d7146101fa578063a9059cbb1461020d578063dd62ed3e1461022057600080fd5b806340c10f19146101a157806370a08231146101b657806395d89b41146101df57600080fd5b806318160ddd116100e557806318160ddd1461016457806323b872dd1461016c578063313ce5671461017f578063395093511461018e57600080fd5b806306fdde031461010c578063095ea7b31461012a578063160f00c11461014d575b600080fd5b610114610259565b6040516101219190610bfe565b60405180910390f35b61013d610138366004610bd4565b6102eb565b6040519015158152602001610121565b61015660055481565b604051908152602001610121565b600254610156565b61013d61017a366004610b98565b610301565b60405160128152602001610121565b61013d61019c366004610bd4565b6103cf565b6101b46101af366004610bd4565b610406565b005b6101566101c4366004610b43565b600160a060020a031660009081526020819052604090205490565b610114610414565b6101b46101f5366004610bd4565b610423565b61013d610208366004610bd4565b61042d565b61013d61021b366004610bd4565b6104e3565b61015661022e366004610b65565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026890610c82565b80601f016020809104026020016040519081016040528092919081815260200182805461029490610c82565b80156102e15780601f106102b6576101008083540402835291602001916102e1565b820191906000526020600020905b8154815290600101906020018083116102c457829003601f168201915b5050505050905090565b60006102f83384846104f0565b50600192915050565b600061030e84848461064f565b600160a060020a0384166000908152600160209081526040808320338452909152902054828110156103b05760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103c485336103bf8685610c6b565b6104f0565b506001949350505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102f89185906103bf908690610c53565b6104108282610884565b5050565b60606004805461026890610c82565b6104108282610972565b336000908152600160209081526040808320600160a060020a0386168452909152812054828110156104ca5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103a7565b6104d933856103bf8685610c6b565b5060019392505050565b60006102f833848461064f565b600160a060020a03831661056e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103a7565b600160a060020a0382166105ed5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600160a060020a0383166106ce5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103a7565b600160a060020a03821661074d5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b610758838383610b0a565b600160a060020a038316600090815260208190526040902054818110156107ea5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103a7565b6107f48282610c6b565b600160a060020a03808616600090815260208190526040808220939093559085168152908120805484929061082a908490610c53565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087691815260200190565b60405180910390a350505050565b600160a060020a0382166108dd5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a7565b6108e960008383610b0a565b80600260008282546108fb9190610c53565b9091555050600160a060020a03821660009081526020819052604081208054839290610928908490610c53565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600160a060020a0382166109f15760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b6109fd82600083610b0a565b600160a060020a03821660009081526020819052604090205481811015610a8f5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b610a998282610c6b565b600160a060020a03841660009081526020819052604081209190915560028054849290610ac7908490610c6b565b9091555050604051828152600090600160a060020a038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610642565b600160056000828254610b1d9190610c53565b9091555050505050565b8035600160a060020a0381168114610b3e57600080fd5b919050565b600060208284031215610b5557600080fd5b610b5e82610b27565b9392505050565b60008060408385031215610b7857600080fd5b610b8183610b27565b9150610b8f60208401610b27565b90509250929050565b600080600060608486031215610bad57600080fd5b610bb684610b27565b9250610bc460208501610b27565b9150604084013590509250925092565b60008060408385031215610be757600080fd5b610bf083610b27565b946020939093013593505050565b600060208083528351808285015260005b81811015610c2b57858101830151858201604001528201610c0f565b81811115610c3d576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c6657610c66610cd6565b500190565b600082821015610c7d57610c7d610cd6565b500390565b600281046001821680610c9657607f821691505b60208210811415610cd0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220033bfd3bc8bee4fd2819dd9eedafa7f16867ccc876b4f827d4fc18cecc2c813164736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F6B656E000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x544B4E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9B SWAP3 SWAP2 SWAP1 PUSH3 0x216 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xB1 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x216 JUMP JUMPDEST POP POP POP PUSH3 0xD8 CALLER PUSH9 0x3635C9ADC5DEA00000 PUSH3 0xDE PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH3 0x153 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x16A PUSH1 0x0 DUP4 DUP4 PUSH5 0x100000000 PUSH3 0x1F7 DUP2 MUL DIV JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x17E SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1AD SWAP1 DUP5 SWAP1 PUSH3 0x2BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x20C SWAP2 SWAP1 PUSH3 0x2BC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x224 SWAP1 PUSH3 0x2FC JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x248 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x293 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x263 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x293 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x293 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x293 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x276 JUMP JUMPDEST POP PUSH3 0x2A1 SWAP3 SWAP2 POP PUSH3 0x2A5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2A1 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2F7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x311 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x34C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD3B DUP1 PUSH3 0x362 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x107 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x83 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x160F00C1 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x414 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x13D PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x268 SWAP1 PUSH2 0xC82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x294 SWAP1 PUSH2 0xC82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 CALLER DUP5 DUP5 PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP5 DUP5 DUP5 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C4 DUP6 CALLER PUSH2 0x3BF DUP7 DUP6 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2F8 SWAP2 DUP6 SWAP1 PUSH2 0x3BF SWAP1 DUP7 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x410 DUP3 DUP3 PUSH2 0x884 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x268 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x410 DUP3 DUP3 PUSH2 0x972 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x4D9 CALLER DUP6 PUSH2 0x3BF DUP7 DUP6 PUSH2 0xC6B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 CALLER DUP5 DUP5 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x758 DUP4 DUP4 DUP4 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x7F4 DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x82A SWAP1 DUP5 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x876 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x8E9 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB0A JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FB SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x928 SWAP1 DUP5 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x9FD DUP3 PUSH1 0x0 DUP4 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0xA99 DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAC7 SWAP1 DUP5 SWAP1 PUSH2 0xC6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1D SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5E DUP3 PUSH2 0xB27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB81 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0xB27 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB6 DUP5 PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP PUSH2 0xBC4 PUSH1 0x20 DUP6 ADD PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF0 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC2B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC0F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC66 PUSH2 0xCD6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7D PUSH2 0xCD6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xCD0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB EXTCODESIZE REVERT EXTCODESIZE 0xC8 0xBE 0xE4 REVERT 0x28 NOT 0xDD SWAP15 0xED 0xAF 0xA7 CALL PUSH9 0x67CCC876B4F827D4FC XOR 0xCE 0xCC 0x2C DUP2 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "166:504:0:-:0;;;234:1;196:39;;240:77;;;;;;;;;;1898:114:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:5;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:1;;;;:7;;:17;;;;;:::i;:::-;;1898:114;;283:29:0::1;289:10;301;283:5;;;:29;;;:::i;:::-;166:504:::0;;8023:330:1;-1:-1:-1;;;;;8106:21:1;;8098:65;;;;;;;216:2:5;8098:65:1;;;198:21:5;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8098:65:1;;;;;;;;8174:49;8203:1;8207:7;8216:6;8174:20;;;;:49;:::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:1;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:1;;520:25:5;;;-1:-1:-1;;;;;8309:37:1;;;8326:1;;8309:37;;508:2:5;493:18;8309:37:1;;;;;;;8023:330;;:::o;540:128:0:-;662:1;638:20;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;540:128:0:o;166:504::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;166:504:0;;;-1:-1:-1;166:504:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:282:5;596:3;627:1;623:6;620:1;617:13;614:2;;;663:77;660:1;653:88;764:4;761:1;754:15;792:4;789:1;782:15;614:2;-1:-1:-1;823:9:5;;604:234::o;843:437::-;928:1;918:12;;975:1;965:12;;;986:2;;1040:4;1032:6;1028:17;1018:27;;986:2;1093;1085:6;1082:14;1062:18;1059:38;1056:2;;;1130:77;1127:1;1120:88;1231:4;1228:1;1221:15;1259:4;1256:1;1249:15;1056:2;;898:382;;;:::o;:::-;166:504:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_558": {
									"entryPoint": 1264,
									"id": 558,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_62": {
									"entryPoint": 2826,
									"id": 62,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_513": {
									"entryPoint": 2418,
									"id": 513,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_451": {
									"entryPoint": 2180,
									"id": 451,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_404": {
									"entryPoint": 1615,
									"id": 404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_201": {
									"entryPoint": null,
									"id": 201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_222": {
									"entryPoint": 747,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_47": {
									"entryPoint": 1059,
									"id": 47,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_138": {
									"entryPoint": null,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_334": {
									"entryPoint": 1069,
									"id": 334,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_296": {
									"entryPoint": 975,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_34": {
									"entryPoint": 1030,
									"id": 34,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_118": {
									"entryPoint": 601,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_128": {
									"entryPoint": 1044,
									"id": 128,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token_transfer_count_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_269": {
									"entryPoint": 769,
									"id": 269,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_183": {
									"entryPoint": 1251,
									"id": 183,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3286,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7324:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:2:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:5"
															},
															"nodeType": "YulIf",
															"src": "295:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"src": "215:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:5"
															},
															"nodeType": "YulIf",
															"src": "503:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "406:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:5"
															},
															"nodeType": "YulIf",
															"src": "785:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:5",
														"type": ""
													}
												],
												"src": "671:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1112:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1133:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:32:5"
															},
															"nodeType": "YulIf",
															"src": "1101:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1191:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1172:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1210:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1220:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1049:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1060:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1072:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1080:6:5",
														"type": ""
													}
												],
												"src": "1004:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1358:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1368:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1368:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1428:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1421:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1327:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1338:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1349:4:5",
														"type": ""
													}
												],
												"src": "1263:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1586:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1596:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1590:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1614:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1637:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1657:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1641:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1695:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1716:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1725:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1720:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1814:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1825:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1810:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1810:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1829:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1806:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1806:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1848:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1856:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1844:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1844:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1860:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1840:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1840:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1834:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1834:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1743:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1757:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1759:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1768:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1771:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1764:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1764:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1759:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1739:3:5",
																"statements": []
															},
															"src": "1735:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1909:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1938:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1949:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1934:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1934:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1958:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1930:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1930:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1923:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1923:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1890:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1893:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1887:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:13:5"
															},
															"nodeType": "YulIf",
															"src": "1884:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2019:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2027:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2015:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2015:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2036:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2032:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2032:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2011:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2011:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1984:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1545:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1567:4:5",
														"type": ""
													}
												],
												"src": "1455:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2248:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2282:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2293:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2278:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2271:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2337:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2310:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2392:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2403:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2408:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2381:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2222:4:5",
														"type": ""
													}
												],
												"src": "2057:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2645:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2741:34:5",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2714:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2796:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2807:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:5"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2812:4:5",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2785:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2826:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2834:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2826:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2626:4:5",
														"type": ""
													}
												],
												"src": "2461:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3038:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3055:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3048:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3100:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3085:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3105:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3078:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3144:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3117:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3215:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3229:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3241:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3252:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3229:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3015:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3029:4:5",
														"type": ""
													}
												],
												"src": "2864:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3441:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3458:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3469:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3451:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3451:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3503:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3488:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3488:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3508:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3481:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3481:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3531:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3527:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3527:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3547:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3520:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3602:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3613:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3598:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3598:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3618:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3591:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3591:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3636:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3648:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3659:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3644:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3636:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3418:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3432:4:5",
														"type": ""
													}
												],
												"src": "3267:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3848:230:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3865:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3876:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3858:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3858:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3858:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3899:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3910:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3895:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3895:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3915:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3888:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3938:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3949:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3934:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3934:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3954:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3927:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3927:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4009:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4020:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4005:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4005:18:5"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4025:10:5",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3998:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3998:38:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4045:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4057:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4068:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4053:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4045:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3825:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3839:4:5",
														"type": ""
													}
												],
												"src": "3674:404:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4257:223:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4274:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4285:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4267:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4308:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4319:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4304:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4324:2:5",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4297:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4297:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4347:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4343:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4343:18:5"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4363:34:5",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4336:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4336:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4418:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4429:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4414:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4414:18:5"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4434:3:5",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4407:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4407:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4407:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4447:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4459:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4470:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4455:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4455:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4447:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4234:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4248:4:5",
														"type": ""
													}
												],
												"src": "4083:397:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4659:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4676:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4687:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4669:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4669:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4710:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4721:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4706:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4706:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4726:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4699:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4699:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4699:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4749:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4760:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4745:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4745:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4765:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4738:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4738:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4738:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4820:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4831:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4816:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4816:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4836:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4809:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4809:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4809:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4853:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4865:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4876:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4861:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4861:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4853:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4636:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4650:4:5",
														"type": ""
													}
												],
												"src": "4485:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5065:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5093:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5075:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5075:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5116:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5127:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5132:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5105:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5155:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5166:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5151:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5171:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5144:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5226:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5237:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5222:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5242:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5215:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5258:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5270:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5281:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5266:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5266:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5258:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5042:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5056:4:5",
														"type": ""
													}
												],
												"src": "4891:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5470:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5487:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5498:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5480:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5521:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5532:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5517:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5517:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5510:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5510:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5560:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5571:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5556:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5556:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5576:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5549:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5549:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5549:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5631:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5642:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5627:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5627:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5647:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5620:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5664:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5676:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5687:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5672:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5672:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5664:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5447:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5461:4:5",
														"type": ""
													}
												],
												"src": "5296:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5876:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5893:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5904:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5886:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5938:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5923:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5943:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5916:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5916:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5966:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5977:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5962:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5962:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5982:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5955:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6025:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6037:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6048:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6033:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6033:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6025:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5853:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5867:4:5",
														"type": ""
													}
												],
												"src": "5702:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6163:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6173:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6185:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6181:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6181:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6173:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6215:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6226:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6208:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6132:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6143:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6154:4:5",
														"type": ""
													}
												],
												"src": "6062:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6341:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6351:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6363:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6374:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6359:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6359:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6351:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6393:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6386:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6386:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6386:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6310:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6321:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6332:4:5",
														"type": ""
													}
												],
												"src": "6244:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6481:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6508:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6510:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6510:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6510:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6497:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6504:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "6500:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6500:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6494:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6494:13:5"
															},
															"nodeType": "YulIf",
															"src": "6491:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6539:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6550:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6553:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6539:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6464:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6467:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6473:3:5",
														"type": ""
													}
												],
												"src": "6433:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6615:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6639:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6631:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6634:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6628:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6628:8:5"
															},
															"nodeType": "YulIf",
															"src": "6625:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6668:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6680:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6683:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6676:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6676:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6668:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6597:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6600:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6606:4:5",
														"type": ""
													}
												],
												"src": "6566:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6751:382:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6761:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6775:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6771:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6792:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6822:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6828:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6818:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6818:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6796:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6869:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6871:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6885:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6893:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6881:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6881:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6871:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6849:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:26:5"
															},
															"nodeType": "YulIf",
															"src": "6839:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6959:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6980:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6983:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6973:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6973:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6973:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7081:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7084:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7074:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7074:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7074:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7109:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7112:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7102:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7102:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7102:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6915:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6938:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6946:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6935:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6935:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6912:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:38:5"
															},
															"nodeType": "YulIf",
															"src": "6909:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6731:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6740:6:5",
														"type": ""
													}
												],
												"src": "6696:437:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7170:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7190:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7180:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7180:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7180:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7284:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7308:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7311:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7301:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7301:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7138:184:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060043610610107576000357c01000000000000000000000000000000000000000000000000000000009004806340c10f19116100a95780639dc29fac116100835780639dc29fac146101e7578063a457c2d7146101fa578063a9059cbb1461020d578063dd62ed3e1461022057600080fd5b806340c10f19146101a157806370a08231146101b657806395d89b41146101df57600080fd5b806318160ddd116100e557806318160ddd1461016457806323b872dd1461016c578063313ce5671461017f578063395093511461018e57600080fd5b806306fdde031461010c578063095ea7b31461012a578063160f00c11461014d575b600080fd5b610114610259565b6040516101219190610bfe565b60405180910390f35b61013d610138366004610bd4565b6102eb565b6040519015158152602001610121565b61015660055481565b604051908152602001610121565b600254610156565b61013d61017a366004610b98565b610301565b60405160128152602001610121565b61013d61019c366004610bd4565b6103cf565b6101b46101af366004610bd4565b610406565b005b6101566101c4366004610b43565b600160a060020a031660009081526020819052604090205490565b610114610414565b6101b46101f5366004610bd4565b610423565b61013d610208366004610bd4565b61042d565b61013d61021b366004610bd4565b6104e3565b61015661022e366004610b65565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461026890610c82565b80601f016020809104026020016040519081016040528092919081815260200182805461029490610c82565b80156102e15780601f106102b6576101008083540402835291602001916102e1565b820191906000526020600020905b8154815290600101906020018083116102c457829003601f168201915b5050505050905090565b60006102f83384846104f0565b50600192915050565b600061030e84848461064f565b600160a060020a0384166000908152600160209081526040808320338452909152902054828110156103b05760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103c485336103bf8685610c6b565b6104f0565b506001949350505050565b336000818152600160209081526040808320600160a060020a038716845290915281205490916102f89185906103bf908690610c53565b6104108282610884565b5050565b60606004805461026890610c82565b6104108282610972565b336000908152600160209081526040808320600160a060020a0386168452909152812054828110156104ca5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016103a7565b6104d933856103bf8685610c6b565b5060019392505050565b60006102f833848461064f565b600160a060020a03831661056e5760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103a7565b600160a060020a0382166105ed5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600160a060020a0383166106ce5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103a7565b600160a060020a03821661074d5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b610758838383610b0a565b600160a060020a038316600090815260208190526040902054818110156107ea5760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103a7565b6107f48282610c6b565b600160a060020a03808616600090815260208190526040808220939093559085168152908120805484929061082a908490610c53565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161087691815260200190565b60405180910390a350505050565b600160a060020a0382166108dd5760405160e560020a62461bcd02815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103a7565b6108e960008383610b0a565b80600260008282546108fb9190610c53565b9091555050600160a060020a03821660009081526020819052604081208054839290610928908490610c53565b9091555050604051818152600160a060020a038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600160a060020a0382166109f15760405160e560020a62461bcd02815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f730000000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b6109fd82600083610b0a565b600160a060020a03821660009081526020819052604090205481811015610a8f5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f636500000000000000000000000000000000000000000000000000000000000060648201526084016103a7565b610a998282610c6b565b600160a060020a03841660009081526020819052604081209190915560028054849290610ac7908490610c6b565b9091555050604051828152600090600160a060020a038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610642565b600160056000828254610b1d9190610c53565b9091555050505050565b8035600160a060020a0381168114610b3e57600080fd5b919050565b600060208284031215610b5557600080fd5b610b5e82610b27565b9392505050565b60008060408385031215610b7857600080fd5b610b8183610b27565b9150610b8f60208401610b27565b90509250929050565b600080600060608486031215610bad57600080fd5b610bb684610b27565b9250610bc460208501610b27565b9150604084013590509250925092565b60008060408385031215610be757600080fd5b610bf083610b27565b946020939093013593505050565b600060208083528351808285015260005b81811015610c2b57858101830151858201604001528201610c0f565b81811115610c3d576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c6657610c66610cd6565b500190565b600082821015610c7d57610c7d610cd6565b500390565b600281046001821680610c9657607f821691505b60208210811415610cd0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220033bfd3bc8bee4fd2819dd9eedafa7f16867ccc876b4f827d4fc18cecc2c813164736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x107 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x83 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xE5 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x160F00C1 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x156 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x156 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x17A CALLDATASIZE PUSH1 0x4 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x121 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x406 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x156 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xB43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x414 JUMP JUMPDEST PUSH2 0x1B4 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH2 0x13D PUSH2 0x208 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x42D JUMP JUMPDEST PUSH2 0x13D PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH2 0x156 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x268 SWAP1 PUSH2 0xC82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x294 SWAP1 PUSH2 0xC82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 CALLER DUP5 DUP5 PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP5 DUP5 DUP5 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3C4 DUP6 CALLER PUSH2 0x3BF DUP7 DUP6 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2F8 SWAP2 DUP6 SWAP1 PUSH2 0x3BF SWAP1 DUP7 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x410 DUP3 DUP3 PUSH2 0x884 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x268 SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x410 DUP3 DUP3 PUSH2 0x972 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x4D9 CALLER DUP6 PUSH2 0x3BF DUP7 DUP6 PUSH2 0xC6B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F8 CALLER DUP5 DUP5 PUSH2 0x64F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x56E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x5ED JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x758 DUP4 DUP4 DUP4 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x7F4 DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x82A SWAP1 DUP5 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x876 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x8E9 PUSH1 0x0 DUP4 DUP4 PUSH2 0xB0A JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8FB SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x928 SWAP1 DUP5 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x9F1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x9FD DUP3 PUSH1 0x0 DUP4 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA8F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0xA99 DUP3 DUP3 PUSH2 0xC6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAC7 SWAP1 DUP5 SWAP1 PUSH2 0xC6B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1D SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0xB3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5E DUP3 PUSH2 0xB27 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB81 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F PUSH1 0x20 DUP5 ADD PUSH2 0xB27 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB6 DUP5 PUSH2 0xB27 JUMP JUMPDEST SWAP3 POP PUSH2 0xBC4 PUSH1 0x20 DUP6 ADD PUSH2 0xB27 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBF0 DUP4 PUSH2 0xB27 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC2B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC0F JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC3D JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC66 JUMPI PUSH2 0xC66 PUSH2 0xCD6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC7D JUMPI PUSH2 0xC7D PUSH2 0xCD6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xC96 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xCD0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB EXTCODESIZE REVERT EXTCODESIZE 0xC8 0xBE 0xE4 REVERT 0x28 NOT 0xDD SWAP15 0xED 0xAF 0xA7 CALL PUSH9 0x67CCC876B4F827D4FC XOR 0xCE 0xCC 0x2C DUP2 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD SDIV STOP CALLER ",
							"sourceMap": "166:504:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;:::i;:::-;;:::i;:::-;;;1428:14:5;;1421:22;1403:41;;1391:2;1376:18;4174:166:1;1358:92:5;196:39:0;;;;;;;;;6208:25:5;;;6196:2;6181:18;196:39:0;6163:76:5;3165:106:1;3252:12;;3165:106;;4807:414;;;;;;:::i;:::-;;:::i;3014:91::-;;;3096:2;6386:36:5;;6374:2;6359:18;3014:91:1;6341:87:5;5616:212:1;;;;;;:::i;:::-;;:::i;358:87:0:-;;;;;;:::i;:::-;;:::i;:::-;;3329:125:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:1;3403:7;3429:18;;;;;;;;;;;;3329:125;2288:102;;;:::i;449:87:0:-;;;;;;:::i;:::-;;:::i;6315:371:1:-;;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;:::i;:::-;;:::i;3887:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:1;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;2077:98;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:4;4296:7:1;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:1;4174:166;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:1;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:4;5003:33:1;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;;;5046:79:1;;3876:2:5;5046:79:1;;;3858:21:5;3915:2;3895:18;;;3888:30;3954:34;3934:18;;;3927:62;4025:10;4005:18;;;3998:38;4053:19;;5046:79:1;;;;;;;;;5135:57;5144:6;665:10:4;5166:25:1;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:1;;4807:414;-1:-1:-1;;;;4807:414:1:o;5616:212::-;665:10:4;5704:4:1;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:1;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;358:87:0:-;418:22;424:7;433:6;418:5;:22::i;:::-;358:87;;:::o;2288:102:1:-;2344:13;2376:7;2369:14;;;;;:::i;449:87:0:-;509:22;515:7;524:6;509:5;:22::i;6315:371:1:-;665:10:4;6408:4:1;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:1;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;;;6495:85:1;;5498:2:5;6495:85:1;;;5480:21:5;5537:2;5517:18;;;5510:30;5576:34;5556:18;;;5549:62;5647:7;5627:18;;;5620:35;5672:19;;6495:85:1;5470:227:5;6495:85:1;6590:67;665:10:4;6613:7:1;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:1;;6315:371;-1:-1:-1;;;6315:371:1:o;3657:172::-;3743:4;3759:42;665:10:4;3783:9:1;3794:6;3759:9;:42::i;9579:340::-;-1:-1:-1;;;;;9680:19:1;;9672:68;;;;-1:-1:-1;;;;;9672:68:1;;5093:2:5;9672:68:1;;;5075:21:5;5132:2;5112:18;;;5105:30;5171:34;5151:18;;;5144:62;5242:6;5222:18;;;5215:34;5266:19;;9672:68:1;5065:226:5;9672:68:1;-1:-1:-1;;;;;9758:21:1;;9750:68;;;;-1:-1:-1;;;;;9750:68:1;;3066:2:5;9750:68:1;;;3048:21:5;3105:2;3085:18;;;3078:30;3144:34;3124:18;;;3117:62;3215:4;3195:18;;;3188:32;3237:19;;9750:68:1;3038:224:5;9750:68:1;-1:-1:-1;;;;;9829:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;6208:25:5;;;9880:32:1;;6181:18:5;9880:32:1;;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:1;;7257:70;;;;-1:-1:-1;;;;;7257:70:1;;4687:2:5;7257:70:1;;;4669:21:5;4726:2;4706:18;;;4699:30;4765:34;4745:18;;;4738:62;4836:7;4816:18;;;4809:35;4861:19;;7257:70:1;4659:227:5;7257:70:1;-1:-1:-1;;;;;7345:23:1;;7337:71;;;;-1:-1:-1;;;;;7337:71:1;;2259:2:5;7337:71:1;;;2241:21:5;2298:2;2278:18;;;2271:30;2337:34;2317:18;;;2310:62;2408:5;2388:18;;;2381:33;2431:19;;7337:71:1;2231:225:5;7337:71:1;7419:47;7440:6;7448:9;7459:6;7419:20;:47::i;:::-;-1:-1:-1;;;;;7501:17:1;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;;;7528:74:1;;3469:2:5;7528:74:1;;;3451:21:5;3508:2;3488:18;;;3481:30;3547:34;3527:18;;;3520:62;3618:8;3598:18;;;3591:36;3644:19;;7528:74:1;3441:228:5;7528:74:1;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:1;7719:6;-1:-1:-1;;;;;7710:35:1;;7738:6;7710:35;;;;6208:25:5;;6196:2;6181:18;;6163:76;7710:35:1;;;;;;;;7247:505;7160:592;;;:::o;8023:330::-;-1:-1:-1;;;;;8106:21:1;;8098:65;;;;-1:-1:-1;;;;;8098:65:1;;5904:2:5;8098:65:1;;;5886:21:5;5943:2;5923:18;;;5916:30;5982:33;5962:18;;;5955:61;6033:18;;8098:65:1;5876:181:5;8098:65:1;8174:49;8203:1;8207:7;8216:6;8174:20;:49::i;:::-;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:1;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:1;;6208:25:5;;;-1:-1:-1;;;;;8309:37:1;;;8326:1;;8309:37;;6196:2:5;6181:18;8309:37:1;;;;;;;8023:330;;:::o;8673:483::-;-1:-1:-1;;;;;8756:21:1;;8748:67;;;;-1:-1:-1;;;;;8748:67:1;;4285:2:5;8748:67:1;;;4267:21:5;4324:2;4304:18;;;4297:30;4363:34;4343:18;;;4336:62;4434:3;4414:18;;;4407:31;4455:19;;8748:67:1;4257:223:5;8748:67:1;8826:49;8847:7;8864:1;8868:6;8826:20;:49::i;:::-;-1:-1:-1;;;;;8911:18:1;;8886:22;8911:18;;;;;;;;;;;8947:24;;;;8939:71;;;;-1:-1:-1;;;;;8939:71:1;;2663:2:5;8939:71:1;;;2645:21:5;2702:2;2682:18;;;2675:30;2741:34;2721:18;;;2714:62;2812:4;2792:18;;;2785:32;2834:19;;8939:71:1;2635:224:5;8939:71:1;9041:23;9058:6;9041:14;:23;:::i;:::-;-1:-1:-1;;;;;9020:18:1;;:9;:18;;;;;;;;;;:44;;;;9074:12;:22;;9090:6;;9020:9;9074:22;;9090:6;;9074:22;:::i;:::-;;;;-1:-1:-1;;9112:37:1;;6208:25:5;;;9138:1:1;;-1:-1:-1;;;;;9112:37:1;;;;;6196:2:5;6181:18;9112:37:1;6163:76:5;540:128:0;662:1;638:20;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;540:128:0:o;14:196:5:-;82:20;;-1:-1:-1;;;;;131:54:5;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;343:1;340;333:12;295:2;366:29;385:9;366:29;:::i;:::-;356:39;285:116;-1:-1:-1;;;285:116:5:o;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:2;;;551:1;548;541:12;503:2;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;493:173;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:2;;;833:1;830;823:12;785:2;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;775:224;;;;;:::o;1004:254::-;1072:6;1080;1133:2;1121:9;1112:7;1108:23;1104:32;1101:2;;;1149:1;1146;1139:12;1101:2;1172:29;1191:9;1172:29;:::i;:::-;1162:39;1248:2;1233:18;;;;1220:32;;-1:-1:-1;;;1091:167:5:o;1455:597::-;1567:4;1596:2;1625;1614:9;1607:21;1657:6;1651:13;1700:6;1695:2;1684:9;1680:18;1673:34;1725:1;1735:140;1749:6;1746:1;1743:13;1735:140;;;1844:14;;;1840:23;;1834:30;1810:17;;;1829:2;1806:26;1799:66;1764:10;;1735:140;;;1893:6;1890:1;1887:13;1884:2;;;1963:1;1958:2;1949:6;1938:9;1934:22;1930:31;1923:42;1884:2;-1:-1:-1;2036:2:5;2015:15;-1:-1:-1;;2011:29:5;1996:45;;;;2043:2;1992:54;;1576:476;-1:-1:-1;;;1576:476:5:o;6433:128::-;6473:3;6504:1;6500:6;6497:1;6494:13;6491:2;;;6510:18;;:::i;:::-;-1:-1:-1;6546:9:5;;6481:80::o;6566:125::-;6606:4;6634:1;6631;6628:8;6625:2;;;6639:18;;:::i;:::-;-1:-1:-1;6676:9:5;;6615:76::o;6696:437::-;6781:1;6771:12;;6828:1;6818:12;;;6839:2;;6893:4;6885:6;6881:17;6871:27;;6839:2;6946;6938:6;6935:14;6915:18;6912:38;6909:2;;;6983:77;6980:1;6973:88;7084:4;7081:1;7074:15;7112:4;7109:1;7102:15;6909:2;;6751:382;;;:::o;7138:184::-;7190:77;7187:1;7180:88;7287:4;7284:1;7277:15;7311:4;7308:1;7301:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "677400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22776",
								"balanceOf(address)": "804",
								"burn(address,uint256)": "infinite",
								"decimals()": "249",
								"decreaseAllowance(address,uint256)": "23281",
								"increaseAllowance(address,uint256)": "23314",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"token_transfer_count()": "468",
								"totalSupply()": "420",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "20310"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 234,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 196,
									"end": 235,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 196,
									"end": 235,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 317,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 317,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 317,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 240,
									"end": 317,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "546F6B656E000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "544B4E0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1973,
									"end": 1978,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1988,
									"end": 1995,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 283,
									"end": 312,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 289,
									"end": 299,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 301,
									"end": 311,
									"name": "PUSH",
									"source": 0,
									"value": "3635C9ADC5DEA00000"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 283,
									"end": 312,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 283,
									"end": 312,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 283,
									"end": 312,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 283,
									"end": 312,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 283,
									"end": 312,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 283,
									"end": 312,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8023,
									"end": 8353,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 8023,
									"end": 8353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8106,
									"end": 8127,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8106,
									"end": 8127,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 294,
									"end": 327,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 267,
									"end": 328,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 8098,
									"end": 8163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8203,
									"end": 8204,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8207,
									"end": 8214,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8216,
									"end": 8222,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8194,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 8174,
									"end": 8194,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 8174,
									"end": 8194,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8194,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8223,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8174,
									"end": 8223,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8174,
									"end": 8223,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 8174,
									"end": 8223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8250,
									"end": 8256,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8246,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8234,
									"end": 8246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8234,
									"end": 8256,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8275,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8284,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 8288,
									"end": 8294,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8288,
									"end": 8294,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8275,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8288,
									"end": 8294,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8288,
									"end": 8294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8266,
									"end": 8294,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 520,
									"end": 545,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 520,
									"end": 545,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8326,
									"end": 8327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8326,
									"end": 8327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 508,
									"end": 510,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 493,
									"end": 511,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8346,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 8023,
									"end": 8353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8023,
									"end": 8353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8023,
									"end": 8353,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 540,
									"end": 668,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 540,
									"end": 668,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 662,
									"end": 663,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 638,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 638,
									"end": 658,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 663,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 638,
									"end": 663,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 638,
									"end": 663,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 540,
									"end": 668,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 556,
									"end": 838,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 556,
									"end": 838,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 596,
									"end": 599,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 627,
									"end": 628,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 623,
									"end": 629,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 620,
									"end": 621,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 617,
									"end": 630,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 614,
									"end": 616,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 614,
									"end": 616,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 663,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 660,
									"end": 661,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 653,
									"end": 741,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 764,
									"end": 768,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 761,
									"end": 762,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 754,
									"end": 769,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 792,
									"end": 796,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 789,
									"end": 790,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 797,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 614,
									"end": 616,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 614,
									"end": 616,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 823,
									"end": 832,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 823,
									"end": 832,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 604,
									"end": 838,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 843,
									"end": 1280,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 843,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 928,
									"end": 929,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 918,
									"end": 930,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 918,
									"end": 930,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 975,
									"end": 976,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 965,
									"end": 977,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 965,
									"end": 977,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 965,
									"end": 977,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 986,
									"end": 988,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 986,
									"end": 988,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1040,
									"end": 1044,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1032,
									"end": 1038,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1028,
									"end": 1045,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1045,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1018,
									"end": 1045,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 986,
									"end": 988,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 986,
									"end": 988,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1093,
									"end": 1095,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1085,
									"end": 1091,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1082,
									"end": 1096,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1062,
									"end": 1080,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1059,
									"end": 1097,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1130,
									"end": 1207,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1127,
									"end": 1128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1120,
									"end": 1208,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1231,
									"end": 1235,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1228,
									"end": 1229,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1221,
									"end": 1236,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1259,
									"end": 1263,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1249,
									"end": 1264,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1056,
									"end": 1058,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 898,
									"end": 1280,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 898,
									"end": 1280,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 898,
									"end": 1280,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 898,
									"end": 1280,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 898,
									"end": 1280,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 898,
									"end": 1280,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 166,
									"end": 670,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 670,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220033bfd3bc8bee4fd2819dd9eedafa7f16867ccc876b4f827d4fc18cecc2c813164736f6c63430008050033",
									".code": [
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "160F00C1"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 670,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 166,
											"end": 670,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1358,
											"end": 1450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 196,
											"end": 235,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 196,
											"end": 235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 196,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 196,
											"end": 235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 196,
											"end": 235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 196,
											"end": 235,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 235,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 196,
											"end": 235,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 196,
											"end": 235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 196,
											"end": 235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6163,
											"end": 6239,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 6386,
											"end": 6422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6422,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6341,
											"end": 6428,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 449,
											"end": 536,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 449,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4296,
											"end": 4303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4329,
											"end": 4333,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 5000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3879,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3888,
											"end": 3918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3954,
											"end": 3988,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3952,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3927,
											"end": 3989,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4035,
											"name": "PUSH",
											"source": 5,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4005,
											"end": 4023,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4005,
											"end": 4023,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4005,
											"end": 4023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4072,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4053,
											"end": 4072,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5144,
											"end": 5150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5210,
											"end": 5214,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5720,
											"end": 5800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 424,
											"end": 431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 433,
											"end": 439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 418,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 418,
											"end": 440,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 440,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 418,
											"end": 440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 358,
											"end": 445,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 449,
											"end": 536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 509,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 515,
											"end": 522,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 524,
											"end": 530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 509,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 509,
											"end": 531,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5480,
											"end": 5501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5576,
											"end": 5610,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5556,
											"end": 5574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5549,
											"end": 5611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5647,
											"end": 5654,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5627,
											"end": 5645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5620,
											"end": 5655,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 5691,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5672,
											"end": 5691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5470,
											"end": 5697,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6613,
											"end": 6620,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6641,
											"end": 6656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6638,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6590,
											"end": 6657,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6590,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 3759,
											"end": 3801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9680,
											"end": 9699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5093,
											"end": 5095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5096,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5105,
											"end": 5135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5205,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 5151,
											"end": 5169,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5151,
											"end": 5169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5206,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5248,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5266,
											"end": 5285,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5266,
											"end": 5285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5065,
											"end": 5291,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3219,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3237,
											"end": 3256,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3237,
											"end": 3256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3038,
											"end": 3262,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9840,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9865,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4687,
											"end": 4689,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4690,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4726,
											"end": 4728,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4799,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4738,
											"end": 4800,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4816,
											"end": 4834,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4816,
											"end": 4834,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4816,
											"end": 4834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4809,
											"end": 4844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4861,
											"end": 4880,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4861,
											"end": 4880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4659,
											"end": 4886,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7345,
											"end": 7368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2231,
											"end": 2456,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7440,
											"end": 7446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7448,
											"end": 7457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 7419,
											"end": 7466,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7419,
											"end": 7466,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 7419,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3508,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3506,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3511,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3581,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3520,
											"end": 3582,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3618,
											"end": 3626,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3591,
											"end": 3627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 3441,
											"end": 3669,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7648,
											"end": 7654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6163,
											"end": 6239,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8023,
											"end": 8353,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8023,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8106,
											"end": 8127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8106,
											"end": 8127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5906,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5943,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5916,
											"end": 5946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5982,
											"end": 6015,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5962,
											"end": 5980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5955,
											"end": 6016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 5876,
											"end": 6057,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 8098,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8203,
											"end": 8204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8174,
											"end": 8223,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8174,
											"end": 8223,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 8174,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8250,
											"end": 8256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8234,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8288,
											"end": 8294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8294,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8326,
											"end": 8327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8346,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8673,
											"end": 9156,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8673,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8756,
											"end": 8777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8777,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4287,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4288,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4297,
											"end": 4327,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4363,
											"end": 4397,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4343,
											"end": 4361,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4336,
											"end": 4398,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4437,
											"name": "PUSH",
											"source": 5,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4407,
											"end": 4438,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4455,
											"end": 4474,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4455,
											"end": 4474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4257,
											"end": 4480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 8748,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8847,
											"end": 8854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8868,
											"end": 8874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 8826,
											"end": 8875,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8826,
											"end": 8875,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 8826,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 8908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8911,
											"end": 8929,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8947,
											"end": 8971,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "6365000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2635,
											"end": 2859,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 8939,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9058,
											"end": 9064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 9041,
											"end": 9064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9064,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9086,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9020,
											"end": 9029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9090,
											"end": 9096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9074,
											"end": 9096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6208,
											"end": 6233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9138,
											"end": 9139,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9112,
											"end": 9149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6163,
											"end": 6239,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 540,
											"end": 668,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 540,
											"end": 668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 638,
											"end": 663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 638,
											"end": 663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 638,
											"end": 663,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 638,
											"end": 663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 638,
											"end": 663,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 540,
											"end": 668,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 285,
											"end": 401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 285,
											"end": 401,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 503,
											"end": 505,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 503,
											"end": 505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 787,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 787,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1136,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1151,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1258,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1623,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2040,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1992,
											"end": 2046,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2052,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1576,
											"end": 2052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6433,
											"end": 6561,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 6433,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6473,
											"end": 6476,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6505,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6494,
											"end": 6507,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6491,
											"end": 6493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6546,
											"end": 6555,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6561,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6566,
											"end": 6691,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6566,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 6632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6636,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6625,
											"end": 6627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6676,
											"end": 6685,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6691,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6696,
											"end": 7133,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 6696,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6781,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6828,
											"end": 6829,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6818,
											"end": 6830,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6893,
											"end": 6897,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6881,
											"end": 6898,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 6898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 6898,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 6948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6935,
											"end": 6949,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6912,
											"end": 6950,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6983,
											"end": 7060,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6980,
											"end": 6981,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6973,
											"end": 7061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7084,
											"end": 7088,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7074,
											"end": 7089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7112,
											"end": 7116,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7117,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 7133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 7133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 7133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6751,
											"end": 7133,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7138,
											"end": 7322,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 7138,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7190,
											"end": 7267,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7187,
											"end": 7188,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7268,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7284,
											"end": 7285,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7277,
											"end": 7292,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7311,
											"end": 7315,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7308,
											"end": 7309,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7316,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"token_transfer_count()": "160f00c1",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token_transfer_count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Loren.sol\":\"MyERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Loren.sol\":{\"keccak256\":\"0x13670a25915d7d1b79a43fcb4b4ff1972898c01af919663691b876d113089aa0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c987fbf43791cc35626f9e892b898b43e948a6beafe3ddbe3749641ac01b04f4\",\"dweb:/ipfs/QmUFMx2FhiRrvgCmq1nGjD79amoagoor8vFxyUE5khk7Y4\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 79,
								"contract": "contracts/Loren.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 85,
								"contract": "contracts/Loren.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 87,
								"contract": "contracts/Loren.sol:MyERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "contracts/Loren.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 91,
								"contract": "contracts/Loren.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "contracts/Loren.sol:MyERC20",
								"label": "token_transfer_count",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1321:10600  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1898:2012  constructor (string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1965:1978  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1965:1970  _name */\n  0x03\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1965:1978  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1988:2005  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1988:1995  _symbol */\n  0x04\n  swap1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1988:2005  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1898:2012  constructor (string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1321:10600  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_21)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:899   */\ntag_22:\n    /* \"#utility.yul\":68:73   */\n  0x00\n    /* \"#utility.yul\":121:124   */\n  dup3\n    /* \"#utility.yul\":114:118   */\n  0x1f\n    /* \"#utility.yul\":106:112   */\n  dup4\n    /* \"#utility.yul\":102:119   */\n  add\n    /* \"#utility.yul\":98:125   */\n  slt\n    /* \"#utility.yul\":88:90   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":139:140   */\n  0x00\n    /* \"#utility.yul\":136:137   */\n  dup1\n    /* \"#utility.yul\":129:141   */\n  revert\n    /* \"#utility.yul\":88:90   */\ntag_24:\n    /* \"#utility.yul\":168:174   */\n  dup2\n    /* \"#utility.yul\":162:175   */\n  mload\n  sub(exp(0x02, 0x40), 0x01)\n    /* \"#utility.yul\":231:233   */\n  dup1\n    /* \"#utility.yul\":227:229   */\n  dup3\n    /* \"#utility.yul\":224:234   */\n  gt\n    /* \"#utility.yul\":221:223   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":237:255   */\n  tag_26\n  tag_27\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":312:314   */\n  0x40\n    /* \"#utility.yul\":306:315   */\n  mload\n    /* \"#utility.yul\":280:282   */\n  0x1f\n    /* \"#utility.yul\":366:379   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":362:384   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":386:388   */\n  0x3f\n    /* \"#utility.yul\":358:389   */\n  add\n    /* \"#utility.yul\":354:394   */\n  and\n    /* \"#utility.yul\":342:395   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":410:428   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":430:452   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":407:453   */\n  or\n    /* \"#utility.yul\":404:406   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":456:474   */\n  tag_29\n  tag_27\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":496:506   */\n  dup2\n    /* \"#utility.yul\":492:494   */\n  0x40\n    /* \"#utility.yul\":485:507   */\n  mstore\n    /* \"#utility.yul\":531:533   */\n  dup4\n    /* \"#utility.yul\":523:529   */\n  dup2\n    /* \"#utility.yul\":516:534   */\n  mstore\n    /* \"#utility.yul\":553:557   */\n  0x20\n    /* \"#utility.yul\":543:557   */\n  swap3\n  pop\n    /* \"#utility.yul\":598:601   */\n  dup7\n    /* \"#utility.yul\":593:595   */\n  dup4\n    /* \"#utility.yul\":588:590   */\n  dup6\n    /* \"#utility.yul\":580:586   */\n  dup9\n    /* \"#utility.yul\":576:591   */\n  add\n    /* \"#utility.yul\":572:596   */\n  add\n    /* \"#utility.yul\":569:602   */\n  gt\n    /* \"#utility.yul\":566:568   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":615:616   */\n  0x00\n    /* \"#utility.yul\":612:613   */\n  dup1\n    /* \"#utility.yul\":605:617   */\n  revert\n    /* \"#utility.yul\":566:568   */\ntag_30:\n    /* \"#utility.yul\":637:638   */\n  0x00\n    /* \"#utility.yul\":628:638   */\n  swap2\n  pop\n    /* \"#utility.yul\":647:780   */\ntag_31:\n    /* \"#utility.yul\":661:663   */\n  dup4\n    /* \"#utility.yul\":658:659   */\n  dup3\n    /* \"#utility.yul\":655:664   */\n  lt\n    /* \"#utility.yul\":647:780   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":749:763   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":745:768   */\n  dup4\n  add\n    /* \"#utility.yul\":739:769   */\n  mload\n    /* \"#utility.yul\":718:732   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":714:737   */\n  dup5\n  add\n    /* \"#utility.yul\":707:770   */\n  mstore\n    /* \"#utility.yul\":672:682   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":647:780   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":798:800   */\n  dup4\n    /* \"#utility.yul\":795:796   */\n  dup3\n    /* \"#utility.yul\":792:801   */\n  gt\n    /* \"#utility.yul\":789:791   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":857:858   */\n  0x00\n    /* \"#utility.yul\":852:854   */\n  dup4\n    /* \"#utility.yul\":847:849   */\n  dup6\n    /* \"#utility.yul\":839:845   */\n  dup4\n    /* \"#utility.yul\":835:850   */\n  add\n    /* \"#utility.yul\":831:855   */\n  add\n    /* \"#utility.yul\":824:859   */\n  mstore\n    /* \"#utility.yul\":789:791   */\ntag_34:\n    /* \"#utility.yul\":887:893   */\n  swap7\n    /* \"#utility.yul\":78:899   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":904:1466   */\ntag_3:\n    /* \"#utility.yul\":1003:1009   */\n  0x00\n    /* \"#utility.yul\":1011:1017   */\n  dup1\n    /* \"#utility.yul\":1064:1066   */\n  0x40\n    /* \"#utility.yul\":1052:1061   */\n  dup4\n    /* \"#utility.yul\":1043:1050   */\n  dup6\n    /* \"#utility.yul\":1039:1062   */\n  sub\n    /* \"#utility.yul\":1035:1067   */\n  slt\n    /* \"#utility.yul\":1032:1034   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1080:1081   */\n  0x00\n    /* \"#utility.yul\":1077:1078   */\n  dup1\n    /* \"#utility.yul\":1070:1082   */\n  revert\n    /* \"#utility.yul\":1032:1034   */\ntag_36:\n    /* \"#utility.yul\":1113:1122   */\n  dup3\n    /* \"#utility.yul\":1107:1123   */\n  mload\n  sub(exp(0x02, 0x40), 0x01)\n    /* \"#utility.yul\":1183:1185   */\n  dup1\n    /* \"#utility.yul\":1175:1181   */\n  dup3\n    /* \"#utility.yul\":1172:1186   */\n  gt\n    /* \"#utility.yul\":1169:1171   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1199:1200   */\n  0x00\n    /* \"#utility.yul\":1196:1197   */\n  dup1\n    /* \"#utility.yul\":1189:1201   */\n  revert\n    /* \"#utility.yul\":1169:1171   */\ntag_37:\n    /* \"#utility.yul\":1222:1283   */\n  tag_38\n    /* \"#utility.yul\":1275:1282   */\n  dup7\n    /* \"#utility.yul\":1266:1272   */\n  dup4\n    /* \"#utility.yul\":1255:1264   */\n  dup8\n    /* \"#utility.yul\":1251:1273   */\n  add\n    /* \"#utility.yul\":1222:1283   */\n  tag_22\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1212:1283   */\n  swap4\n  pop\n    /* \"#utility.yul\":1329:1331   */\n  0x20\n    /* \"#utility.yul\":1318:1327   */\n  dup6\n    /* \"#utility.yul\":1314:1332   */\n  add\n    /* \"#utility.yul\":1308:1333   */\n  mload\n    /* \"#utility.yul\":1292:1333   */\n  swap2\n  pop\n    /* \"#utility.yul\":1358:1360   */\n  dup1\n    /* \"#utility.yul\":1348:1356   */\n  dup3\n    /* \"#utility.yul\":1345:1361   */\n  gt\n    /* \"#utility.yul\":1342:1344   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1374:1375   */\n  0x00\n    /* \"#utility.yul\":1371:1372   */\n  dup1\n    /* \"#utility.yul\":1364:1376   */\n  revert\n    /* \"#utility.yul\":1342:1344   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1397:1460   */\n  tag_40\n    /* \"#utility.yul\":1452:1459   */\n  dup6\n    /* \"#utility.yul\":1441:1449   */\n  dup3\n    /* \"#utility.yul\":1430:1439   */\n  dup7\n    /* \"#utility.yul\":1426:1450   */\n  add\n    /* \"#utility.yul\":1397:1460   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1387:1460   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1022:1466   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1471:1908   */\ntag_11:\n    /* \"#utility.yul\":1556:1557   */\n  0x02\n    /* \"#utility.yul\":1546:1558   */\n  dup2\n  div\n    /* \"#utility.yul\":1603:1604   */\n  0x01\n    /* \"#utility.yul\":1593:1605   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1614:1616   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1668:1672   */\n  0x7f\n    /* \"#utility.yul\":1660:1666   */\n  dup3\n    /* \"#utility.yul\":1656:1673   */\n  and\n    /* \"#utility.yul\":1646:1673   */\n  swap2\n  pop\n    /* \"#utility.yul\":1614:1616   */\ntag_42:\n    /* \"#utility.yul\":1721:1723   */\n  0x20\n    /* \"#utility.yul\":1713:1719   */\n  dup3\n    /* \"#utility.yul\":1710:1724   */\n  lt\n    /* \"#utility.yul\":1690:1708   */\n  dup2\n    /* \"#utility.yul\":1687:1725   */\n  eq\n    /* \"#utility.yul\":1684:1686   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1758:1835   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1755:1756   */\n  0x00\n    /* \"#utility.yul\":1748:1836   */\n  mstore\n    /* \"#utility.yul\":1859:1863   */\n  0x22\n    /* \"#utility.yul\":1856:1857   */\n  0x04\n    /* \"#utility.yul\":1849:1864   */\n  mstore\n    /* \"#utility.yul\":1887:1891   */\n  0x24\n    /* \"#utility.yul\":1884:1885   */\n  0x00\n    /* \"#utility.yul\":1877:1892   */\n  revert\n    /* \"#utility.yul\":1684:1686   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1526:1908   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1913:2097   */\ntag_27:\n    /* \"#utility.yul\":1965:2042   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1962:1963   */\n  0x00\n    /* \"#utility.yul\":1955:2043   */\n  mstore\n    /* \"#utility.yul\":2062:2066   */\n  0x41\n    /* \"#utility.yul\":2059:2060   */\n  0x04\n    /* \"#utility.yul\":2052:2067   */\n  mstore\n    /* \"#utility.yul\":2086:2090   */\n  0x24\n    /* \"#utility.yul\":2083:2084   */\n  0x00\n    /* \"#utility.yul\":2076:2091   */\n  revert\n    /* \"#utility.yul\":1945:2097   */\ntag_21:\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1321:10600  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":1321:10600  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      calldataload(0x00)\n      0x0100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2077:2175  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1428:1442   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1421:1443   */\n      iszero\n        /* \"#utility.yul\":1403:1444   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1391:1393   */\n      0x20\n        /* \"#utility.yul\":1376:1394   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1358:1450   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3165:3271  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3252:3264  _totalSupply */\n      sload(0x02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3165:3271  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":5043:5068   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5031:5033   */\n      0x20\n        /* \"#utility.yul\":5016:5034   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3165:3271  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":4998:5074   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4807:5221  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3014:3105  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3096:3098  18 */\n      0x12\n        /* \"#utility.yul\":5221:5257   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5209:5211   */\n      0x20\n        /* \"#utility.yul\":5194:5212   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3014:3105  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":5176:5263   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5616:5828  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3329:3454  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3429:3447  _balances[account] */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3403:3410  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3429:3447  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3329:3454  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2288:2390  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6315:6686  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3657:3829  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3887:4036  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4020  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3976:3983  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4020  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4013  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4020  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4002:4029  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3887:4036  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2077:2175  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2131:2144  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2163:2168  _name */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2156:2168  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2077:2175  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4257:4261  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4273:4312  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4296:4303  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4305:4311  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4273:4281  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4273:4312  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4329:4333  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4174:4340  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4807:5221  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4913:4917  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4929:4965  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4939:4945  sender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4947:4956  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4958:4964  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4929:4938  _transfer */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4929:4965  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5022  _allowances[sender] */\n      dup5\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4976:5000  uint256 currentAllowance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5022  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5014  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5022  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5003:5036  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5054:5080  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5046:5125  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3473:3475   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5046:5125  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3455:3476   */\n      mstore\n        /* \"#utility.yul\":3512:3514   */\n      0x28\n        /* \"#utility.yul\":3492:3510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3485:3515   */\n      mstore\n        /* \"#utility.yul\":3551:3585   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3531:3549   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3524:3586   */\n      mstore\n        /* \"#utility.yul\":3622:3632   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3602:3620   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3595:3633   */\n      mstore\n        /* \"#utility.yul\":3650:3669   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5046:5125  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5135:5192  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5144:5150  sender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5166:5191  currentAllowance - amount */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5185:5191  amount */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5166:5182  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5166:5191  currentAllowance - amount */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5135:5143  _approve */\n      tag_74\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5135:5192  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5210:5214  true */\n      0x01\n      swap5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":4807:5221  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5616:5828  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5704:5708  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5777  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5763  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5777  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5786  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5704:5708  bool */\n      swap1\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5720:5800  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5743:5750  spender */\n      dup6\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5799  _allowances[_msgSender()][spender] + addedValue */\n      tag_85\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5789:5799  addedValue */\n      dup7\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":5752:5799  _allowances[_msgSender()][spender] + addedValue */\n      tag_93\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2288:2390  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2344:2357  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2376:2383  _symbol */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":2369:2383  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6315:6686  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6408:6412  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6476  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6462  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6476  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6451:6485  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6503:6538  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4693:4695   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4675:4696   */\n      mstore\n        /* \"#utility.yul\":4732:4734   */\n      0x25\n        /* \"#utility.yul\":4712:4730   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4705:4735   */\n      mstore\n        /* \"#utility.yul\":4771:4805   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4751:4769   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4744:4806   */\n      mstore\n        /* \"#utility.yul\":4842:4849   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4822:4840   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4815:4850   */\n      mstore\n        /* \"#utility.yul\":4867:4886   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":4665:4892   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6495:6580  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6590:6657  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_106\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6613:6620  spender */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6622:6656  currentAllowance - subtractedValue */\n      tag_85\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6641:6656  subtractedValue */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6622:6638  currentAllowance */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6622:6656  currentAllowance - subtractedValue */\n      tag_86\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6590:6657  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_106:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6675:6679  true */\n      0x01\n      swap4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":6315:6686  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3657:3829  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3743:3747  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3759:3801  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3783:3792  recipient */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3794:3800  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3759:3768  _transfer */\n      tag_78\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":3759:3801  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9579:9919  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9680:9699  owner != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x24\n        /* \"#utility.yul\":4307:4325   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n        /* \"#utility.yul\":4366:4400   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4401   */\n      mstore\n        /* \"#utility.yul\":4437:4443   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4417:4435   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4410:4444   */\n      mstore\n        /* \"#utility.yul\":4461:4480   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4260:4486   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9672:9740  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_115:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9758:9779  spender != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2663:2665   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2645:2666   */\n      mstore\n        /* \"#utility.yul\":2702:2704   */\n      0x22\n        /* \"#utility.yul\":2682:2700   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2675:2705   */\n      mstore\n        /* \"#utility.yul\":2741:2775   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":2721:2739   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2714:2776   */\n      mstore\n        /* \"#utility.yul\":2812:2816   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2792:2810   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2785:2817   */\n      mstore\n        /* \"#utility.yul\":2834:2853   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2635:2859   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9750:9818  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_118:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9847  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9840  _allowances */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9847  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9856  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9829:9865  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9880:9912  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":5043:5068   */\n      dup5\n      dup2\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9880:9912  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":5016:5034   */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9880:9912  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":9579:9919  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7160:7752  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_78:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7265:7285  sender != address(0) */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3864:3885   */\n      mstore\n        /* \"#utility.yul\":3921:3923   */\n      0x25\n        /* \"#utility.yul\":3901:3919   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3894:3924   */\n      mstore\n        /* \"#utility.yul\":3960:3994   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":3940:3958   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3933:3995   */\n      mstore\n        /* \"#utility.yul\":4031:4038   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4011:4029   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4004:4039   */\n      mstore\n        /* \"#utility.yul\":4056:4075   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3854:4081   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7257:7327  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7345:7368  recipient != address(0) */\n      dup3\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":2259:2261   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2241:2262   */\n      mstore\n        /* \"#utility.yul\":2298:2300   */\n      0x23\n        /* \"#utility.yul\":2278:2296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2271:2301   */\n      mstore\n        /* \"#utility.yul\":2337:2371   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2317:2335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2310:2372   */\n      mstore\n        /* \"#utility.yul\":2408:2413   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2388:2406   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2381:2414   */\n      mstore\n        /* \"#utility.yul\":2431:2450   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":2231:2456   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7337:7408  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7501:7518  _balances[sender] */\n      dup4\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7477:7498  uint256 senderBalance */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7501:7518  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7536:7559  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      mul(0x461bcd, exp(0x02, 0xe5))\n      dup2\n      mstore\n        /* \"#utility.yul\":3066:3068   */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3048:3069   */\n      mstore\n        /* \"#utility.yul\":3105:3107   */\n      0x26\n        /* \"#utility.yul\":3085:3103   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3078:3108   */\n      mstore\n        /* \"#utility.yul\":3144:3178   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3124:3142   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3117:3179   */\n      mstore\n        /* \"#utility.yul\":3215:3223   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3195:3213   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3188:3224   */\n      mstore\n        /* \"#utility.yul\":3241:3260   */\n      0x84\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":3038:3266   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7528:7602  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7632:7654  senderBalance - amount */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7648:7654  amount */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7632:7645  senderBalance */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7632:7654  senderBalance - amount */\n      tag_86\n      jump\t// in\n    tag_134:\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7629  _balances[sender] */\n      dup1\n      dup7\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7621  _balances */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7629  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7654  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7684  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7694  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7688:7694  amount */\n      dup5\n      swap3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7612:7621  _balances */\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7694  _balances[recipient] += amount */\n      tag_135\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7688:7694  amount */\n      dup5\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7664:7694  _balances[recipient] += amount */\n      tag_93\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7727:7736  recipient */\n      dup3\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7719:7725  sender */\n      dup5\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7738:7744  amount */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":5043:5068   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5031:5033   */\n      0x20\n        /* \"#utility.yul\":5016:5034   */\n      add\n      swap1\n        /* \"#utility.yul\":4998:5074   */\n      jump\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7710:7745  Transfer(sender, recipient, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7247:7752  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":7160:7752  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_139:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(exp(0x02, 0xa0), 0x01)\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_141\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":111:113   */\n    tag_141:\n        /* \"#utility.yul\":63:210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":215:401   */\n    tag_44:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:297   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":340:341   */\n      dup1\n        /* \"#utility.yul\":333:345   */\n      revert\n        /* \"#utility.yul\":295:297   */\n    tag_143:\n        /* \"#utility.yul\":366:395   */\n      tag_144\n        /* \"#utility.yul\":385:394   */\n      dup3\n        /* \"#utility.yul\":366:395   */\n      tag_139\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":356:395   */\n      swap4\n        /* \"#utility.yul\":285:401   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":406:666   */\n    tag_60:\n        /* \"#utility.yul\":474:480   */\n      0x00\n        /* \"#utility.yul\":482:488   */\n      dup1\n        /* \"#utility.yul\":535:537   */\n      0x40\n        /* \"#utility.yul\":523:532   */\n      dup4\n        /* \"#utility.yul\":514:521   */\n      dup6\n        /* \"#utility.yul\":510:533   */\n      sub\n        /* \"#utility.yul\":506:538   */\n      slt\n        /* \"#utility.yul\":503:505   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":551:552   */\n      0x00\n        /* \"#utility.yul\":548:549   */\n      dup1\n        /* \"#utility.yul\":541:553   */\n      revert\n        /* \"#utility.yul\":503:505   */\n    tag_146:\n        /* \"#utility.yul\":574:603   */\n      tag_147\n        /* \"#utility.yul\":593:602   */\n      dup4\n        /* \"#utility.yul\":574:603   */\n      tag_139\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":564:603   */\n      swap2\n      pop\n        /* \"#utility.yul\":622:660   */\n      tag_148\n        /* \"#utility.yul\":656:658   */\n      0x20\n        /* \"#utility.yul\":645:654   */\n      dup5\n        /* \"#utility.yul\":641:659   */\n      add\n        /* \"#utility.yul\":622:660   */\n      tag_139\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":612:660   */\n      swap1\n      pop\n        /* \"#utility.yul\":493:666   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":671:999   */\n    tag_31:\n        /* \"#utility.yul\":748:754   */\n      0x00\n        /* \"#utility.yul\":756:762   */\n      dup1\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":817:819   */\n      0x60\n        /* \"#utility.yul\":805:814   */\n      dup5\n        /* \"#utility.yul\":796:803   */\n      dup7\n        /* \"#utility.yul\":792:815   */\n      sub\n        /* \"#utility.yul\":788:820   */\n      slt\n        /* \"#utility.yul\":785:787   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":833:834   */\n      0x00\n        /* \"#utility.yul\":830:831   */\n      dup1\n        /* \"#utility.yul\":823:835   */\n      revert\n        /* \"#utility.yul\":785:787   */\n    tag_150:\n        /* \"#utility.yul\":856:885   */\n      tag_151\n        /* \"#utility.yul\":875:884   */\n      dup5\n        /* \"#utility.yul\":856:885   */\n      tag_139\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":846:885   */\n      swap3\n      pop\n        /* \"#utility.yul\":904:942   */\n      tag_152\n        /* \"#utility.yul\":938:940   */\n      0x20\n        /* \"#utility.yul\":927:936   */\n      dup6\n        /* \"#utility.yul\":923:941   */\n      add\n        /* \"#utility.yul\":904:942   */\n      tag_139\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":894:942   */\n      swap2\n      pop\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":978:987   */\n      dup5\n        /* \"#utility.yul\":974:992   */\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n        /* \"#utility.yul\":951:993   */\n      swap1\n      pop\n        /* \"#utility.yul\":775:999   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1004:1258   */\n    tag_21:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1080:1086   */\n      dup1\n        /* \"#utility.yul\":1133:1135   */\n      0x40\n        /* \"#utility.yul\":1121:1130   */\n      dup4\n        /* \"#utility.yul\":1112:1119   */\n      dup6\n        /* \"#utility.yul\":1108:1131   */\n      sub\n        /* \"#utility.yul\":1104:1136   */\n      slt\n        /* \"#utility.yul\":1101:1103   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1149:1150   */\n      0x00\n        /* \"#utility.yul\":1146:1147   */\n      dup1\n        /* \"#utility.yul\":1139:1151   */\n      revert\n        /* \"#utility.yul\":1101:1103   */\n    tag_154:\n        /* \"#utility.yul\":1172:1201   */\n      tag_155\n        /* \"#utility.yul\":1191:1200   */\n      dup4\n        /* \"#utility.yul\":1172:1201   */\n      tag_139\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1162:1201   */\n      swap5\n        /* \"#utility.yul\":1248:1250   */\n      0x20\n        /* \"#utility.yul\":1233:1251   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1220:1252   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1091:1258   */\n      jump\t// out\n        /* \"#utility.yul\":1455:2052   */\n    tag_18:\n        /* \"#utility.yul\":1567:1571   */\n      0x00\n        /* \"#utility.yul\":1596:1598   */\n      0x20\n        /* \"#utility.yul\":1625:1627   */\n      dup1\n        /* \"#utility.yul\":1614:1623   */\n      dup4\n        /* \"#utility.yul\":1607:1628   */\n      mstore\n        /* \"#utility.yul\":1657:1663   */\n      dup4\n        /* \"#utility.yul\":1651:1664   */\n      mload\n        /* \"#utility.yul\":1700:1706   */\n      dup1\n        /* \"#utility.yul\":1695:1697   */\n      dup3\n        /* \"#utility.yul\":1684:1693   */\n      dup6\n        /* \"#utility.yul\":1680:1698   */\n      add\n        /* \"#utility.yul\":1673:1707   */\n      mstore\n        /* \"#utility.yul\":1725:1726   */\n      0x00\n        /* \"#utility.yul\":1735:1875   */\n    tag_158:\n        /* \"#utility.yul\":1749:1755   */\n      dup2\n        /* \"#utility.yul\":1746:1747   */\n      dup2\n        /* \"#utility.yul\":1743:1756   */\n      lt\n        /* \"#utility.yul\":1735:1875   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1844:1858   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":1840:1863   */\n      dup4\n      add\n        /* \"#utility.yul\":1834:1864   */\n      mload\n        /* \"#utility.yul\":1810:1827   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":1829:1831   */\n      0x40\n        /* \"#utility.yul\":1806:1832   */\n      add\n        /* \"#utility.yul\":1799:1865   */\n      mstore\n        /* \"#utility.yul\":1764:1774   */\n      dup3\n      add\n        /* \"#utility.yul\":1735:1875   */\n      jump(tag_158)\n    tag_160:\n        /* \"#utility.yul\":1893:1899   */\n      dup2\n        /* \"#utility.yul\":1890:1891   */\n      dup2\n        /* \"#utility.yul\":1887:1900   */\n      gt\n        /* \"#utility.yul\":1884:1886   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":1963:1964   */\n      0x00\n        /* \"#utility.yul\":1958:1960   */\n      0x40\n        /* \"#utility.yul\":1949:1955   */\n      dup4\n        /* \"#utility.yul\":1938:1947   */\n      dup8\n        /* \"#utility.yul\":1934:1956   */\n      add\n        /* \"#utility.yul\":1930:1961   */\n      add\n        /* \"#utility.yul\":1923:1965   */\n      mstore\n        /* \"#utility.yul\":1884:1886   */\n    tag_161:\n      pop\n        /* \"#utility.yul\":2036:2038   */\n      0x1f\n        /* \"#utility.yul\":2015:2030   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2011:2040   */\n      and\n        /* \"#utility.yul\":1996:2041   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":1992:2046   */\n      add\n      swap4\n        /* \"#utility.yul\":1576:2052   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5268:5396   */\n    tag_93:\n        /* \"#utility.yul\":5308:5311   */\n      0x00\n        /* \"#utility.yul\":5339:5340   */\n      dup3\n        /* \"#utility.yul\":5335:5341   */\n      not\n        /* \"#utility.yul\":5332:5333   */\n      dup3\n        /* \"#utility.yul\":5329:5342   */\n      gt\n        /* \"#utility.yul\":5326:5328   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":5345:5363   */\n      tag_173\n      tag_174\n      jump\t// in\n    tag_173:\n      pop\n        /* \"#utility.yul\":5381:5390   */\n      add\n      swap1\n        /* \"#utility.yul\":5316:5396   */\n      jump\t// out\n        /* \"#utility.yul\":5401:5526   */\n    tag_86:\n        /* \"#utility.yul\":5441:5445   */\n      0x00\n        /* \"#utility.yul\":5469:5470   */\n      dup3\n        /* \"#utility.yul\":5466:5467   */\n      dup3\n        /* \"#utility.yul\":5463:5471   */\n      lt\n        /* \"#utility.yul\":5460:5462   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":5474:5492   */\n      tag_177\n      tag_174\n      jump\t// in\n    tag_177:\n      pop\n        /* \"#utility.yul\":5511:5520   */\n      sub\n      swap1\n        /* \"#utility.yul\":5450:5526   */\n      jump\t// out\n        /* \"#utility.yul\":5531:5968   */\n    tag_65:\n        /* \"#utility.yul\":5616:5617   */\n      0x02\n        /* \"#utility.yul\":5606:5618   */\n      dup2\n      div\n        /* \"#utility.yul\":5663:5664   */\n      0x01\n        /* \"#utility.yul\":5653:5665   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5674:5676   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":5728:5732   */\n      0x7f\n        /* \"#utility.yul\":5720:5726   */\n      dup3\n        /* \"#utility.yul\":5716:5733   */\n      and\n        /* \"#utility.yul\":5706:5733   */\n      swap2\n      pop\n        /* \"#utility.yul\":5674:5676   */\n    tag_179:\n        /* \"#utility.yul\":5781:5783   */\n      0x20\n        /* \"#utility.yul\":5773:5779   */\n      dup3\n        /* \"#utility.yul\":5770:5784   */\n      lt\n        /* \"#utility.yul\":5750:5768   */\n      dup2\n        /* \"#utility.yul\":5747:5785   */\n      eq\n        /* \"#utility.yul\":5744:5746   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":5818:5895   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5815:5816   */\n      0x00\n        /* \"#utility.yul\":5808:5896   */\n      mstore\n        /* \"#utility.yul\":5919:5923   */\n      0x22\n        /* \"#utility.yul\":5916:5917   */\n      0x04\n        /* \"#utility.yul\":5909:5924   */\n      mstore\n        /* \"#utility.yul\":5947:5951   */\n      0x24\n        /* \"#utility.yul\":5944:5945   */\n      0x00\n        /* \"#utility.yul\":5937:5952   */\n      revert\n        /* \"#utility.yul\":5744:5746   */\n    tag_180:\n      pop\n        /* \"#utility.yul\":5586:5968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5973:6157   */\n    tag_174:\n        /* \"#utility.yul\":6025:6102   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6022:6023   */\n      0x00\n        /* \"#utility.yul\":6015:6103   */\n      mstore\n        /* \"#utility.yul\":6122:6126   */\n      0x11\n        /* \"#utility.yul\":6119:6120   */\n      0x04\n        /* \"#utility.yul\":6112:6127   */\n      mstore\n        /* \"#utility.yul\":6146:6150   */\n      0x24\n        /* \"#utility.yul\":6143:6144   */\n      0x00\n        /* \"#utility.yul\":6136:6151   */\n      revert\n\n    auxdata: 0xa26469706673582212206795aa3b6efa93ab265d32a7c12fd943e6c226440fd45c46fe2068bdec146c1064736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2099:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "78:821:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "127:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "136:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "129:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "129:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "129:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "106:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "114:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "102:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "121:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "98:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "98:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "91:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "91:35:5"
															},
															"nodeType": "YulIf",
															"src": "88:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "152:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "168:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "162:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "162:13:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "156:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "184:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "194:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "188:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "235:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "237:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "237:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "237:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "227:2:5"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "231:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "224:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:10:5"
															},
															"nodeType": "YulIf",
															"src": "221:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "266:17:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "280:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "276:7:5"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "270:2:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "292:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "306:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "306:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "296:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "324:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "370:2:5"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "374:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "366:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "366:13:5"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "381:2:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "362:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "362:22:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "386:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "358:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "358:31:5"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "391:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "354:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:40:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "342:53:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "328:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "454:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "456:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "456:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "456:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "413:10:5"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "425:2:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "410:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "410:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "433:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "445:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "430:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "430:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "407:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "407:46:5"
															},
															"nodeType": "YulIf",
															"src": "404:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "492:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "496:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "485:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "485:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "523:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "531:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "516:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:18:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "516:18:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "543:14:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "553:4:5",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "547:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "603:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "612:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "615:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "605:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "605:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "605:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "580:6:5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "588:2:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "576:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "576:15:5"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "593:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "572:24:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "598:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "569:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "569:33:5"
															},
															"nodeType": "YulIf",
															"src": "566:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "628:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "637:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "632:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "693:87:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "722:6:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "730:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "718:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "718:14:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "734:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "714:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "714:23:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "753:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "761:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "749:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "749:14:5"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "765:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "745:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "745:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "739:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "739:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "707:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:63:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "707:63:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "658:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "661:2:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "655:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:9:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "665:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "667:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "676:1:5"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "679:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "672:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "672:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "667:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "651:3:5",
																"statements": []
															},
															"src": "647:133:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "810:59:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "839:6:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "847:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "835:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "835:15:5"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "852:2:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "831:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "831:24:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "824:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "824:35:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "824:35:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "795:1:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "798:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "792:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:9:5"
															},
															"nodeType": "YulIf",
															"src": "789:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "878:15:5",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "887:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "878:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "52:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "60:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "68:5:5",
														"type": ""
													}
												],
												"src": "14:885:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1022:444:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1068:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1043:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1039:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1039:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:32:5"
															},
															"nodeType": "YulIf",
															"src": "1032:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1132:28:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1142:18:5",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1136:2:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1187:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1196:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1199:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1189:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1189:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1189:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1175:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1183:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1172:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:14:5"
															},
															"nodeType": "YulIf",
															"src": "1169:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1212:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1255:9:5"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1266:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1251:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1275:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1222:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1292:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1308:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1296:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1362:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1371:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1374:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1364:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1364:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1364:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:8:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1358:2:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1345:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:16:5"
															},
															"nodeType": "YulIf",
															"src": "1342:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1387:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1441:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1426:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1452:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1397:28:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1397:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "980:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "991:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1003:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1011:6:5",
														"type": ""
													}
												],
												"src": "904:562:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1526:382:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1536:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1550:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1556:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1536:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1567:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1597:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1593:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1593:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1571:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1644:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1646:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1660:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1668:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1656:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1656:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1646:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1624:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1617:26:5"
															},
															"nodeType": "YulIf",
															"src": "1614:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1734:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1758:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1748:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1748:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1856:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1859:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1849:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1849:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1849:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1877:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1877:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1877:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1690:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1721:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1710:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1710:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1687:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1687:38:5"
															},
															"nodeType": "YulIf",
															"src": "1684:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1506:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1515:6:5",
														"type": ""
													}
												],
												"src": "1471:437:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1962:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2059:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2062:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2052:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2052:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2083:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2076:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1913:184:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000cc238038062000cc28339810160408190526200003491620001c5565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b505050620002b4565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001604060020a03808211156200013d576200013d62000285565b604051601f8301601f19908116603f0116810190828211818310171562000168576200016862000285565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001604060020a0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b6002810460018216806200024457607f821691505b602082108114156200027f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109fe80620002c46000396000f3fe608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461014057806370a082311461015357806395d89b411461017c578063a457c2d714610184578063a9059cbb14610197578063dd62ed3e146101aa57600080fd5b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461010c57806323b872dd1461011e578063313ce56714610131575b600080fd5b6100d36101e3565b6040516100e091906108c1565b60405180910390f35b6100fc6100f7366004610897565b610275565b60405190151581526020016100e0565b6002545b6040519081526020016100e0565b6100fc61012c36600461085b565b61028b565b604051601281526020016100e0565b6100fc61014e366004610897565b610359565b610110610161366004610806565b600160a060020a031660009081526020819052604090205490565b6100d3610390565b6100fc610192366004610897565b61039f565b6100fc6101a5366004610897565b610455565b6101106101b8366004610828565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f290610945565b80601f016020809104026020016040519081016040528092919081815260200182805461021e90610945565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b6000610282338484610462565b50600192915050565b60006102988484846105c0565b600160a060020a03841660009081526001602090815260408083203384529091529020548281101561033a5760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61034e8533610349868561092e565b610462565b506001949350505050565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610282918590610349908690610916565b6060600480546101f290610945565b336000908152600160209081526040808320600160a060020a03861684529091528120548281101561043c5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610331565b61044b3385610349868561092e565b5060019392505050565b60006102823384846105c0565b600160a060020a0383166104e05760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a03821661055f5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a03831661063f5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a0382166106be5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a038316600090815260208190526040902054818110156107505760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610331565b61075a828261092e565b600160a060020a038086166000908152602081905260408082209390935590851681529081208054849290610790908490610916565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107dc91815260200190565b60405180910390a350505050565b8035600160a060020a038116811461080157600080fd5b919050565b60006020828403121561081857600080fd5b610821826107ea565b9392505050565b6000806040838503121561083b57600080fd5b610844836107ea565b9150610852602084016107ea565b90509250929050565b60008060006060848603121561087057600080fd5b610879846107ea565b9250610887602085016107ea565b9150604084013590509250925092565b600080604083850312156108aa57600080fd5b6108b3836107ea565b946020939093013593505050565b600060208083528351808285015260005b818110156108ee578581018301518582016040015282016108d2565b81811115610900576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561092957610929610999565b500190565b60008282101561094057610940610999565b500390565b60028104600182168061095957607f821691505b60208210811415610993577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206795aa3b6efa93ab265d32a7c12fd943e6c226440fd45c46fe2068bdec146c1064736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xCC2 CODESIZE SUB DUP1 PUSH3 0xCC2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C5 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x2B4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x22F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP1 DUP3 GT ISZERO PUSH3 0x13D JUMPI PUSH3 0x13D PUSH3 0x285 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x168 JUMPI PUSH3 0x168 PUSH3 0x285 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A9 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x18A JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1BB JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x40 PUSH1 0x2 EXP SUB DUP1 DUP3 GT ISZERO PUSH3 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FF DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x225 DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x244 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x9FE DUP1 PUSH3 0x2C4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x39509351 GT PUSH2 0x8E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x390 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F2 SWAP1 PUSH2 0x945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21E SWAP1 PUSH2 0x945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x240 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 CALLER DUP5 DUP5 PUSH2 0x462 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298 DUP5 DUP5 DUP5 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34E DUP6 CALLER PUSH2 0x349 DUP7 DUP6 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x282 SWAP2 DUP6 SWAP1 PUSH2 0x349 SWAP1 DUP7 SWAP1 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F2 SWAP1 PUSH2 0x945 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x44B CALLER DUP6 PUSH2 0x349 DUP7 DUP6 PUSH2 0x92E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 CALLER DUP5 DUP5 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x75A DUP3 DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x790 SWAP1 DUP5 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x821 DUP3 PUSH2 0x7EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x844 DUP4 PUSH2 0x7EA JUMP JUMPDEST SWAP2 POP PUSH2 0x852 PUSH1 0x20 DUP5 ADD PUSH2 0x7EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x879 DUP5 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP PUSH2 0x887 PUSH1 0x20 DUP6 ADD PUSH2 0x7EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x7EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8D2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x999 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x999 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x959 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x993 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x95AA3B6EFA93AB26 0x5D ORIGIN 0xA7 0xC1 0x2F 0xD9 NUMBER 0xE6 0xC2 0x26 DIFFICULTY 0xF 0xD4 0x5C CHAINID INVALID KECCAK256 PUSH9 0xBDEC146C1064736F6C PUSH4 0x43000805 STOP CALLER ",
							"sourceMap": "1321:9279:1:-:0;;;1898:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1965:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1988:17:1;;;;:7;;:17;;;;;:::i;:::-;;1898:114;;1321:9279;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1321:9279:1;;;-1:-1:-1;1321:9279:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:885:5;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;139:1;136;129:12;88:2;168:6;162:13;-1:-1:-1;;;;;231:2:5;227;224:10;221:2;;;237:18;;:::i;:::-;312:2;306:9;280:2;366:13;;-1:-1:-1;;362:22:5;;;386:2;358:31;354:40;342:53;;;410:18;;;430:22;;;407:46;404:2;;;456:18;;:::i;:::-;496:10;492:2;485:22;531:2;523:6;516:18;553:4;543:14;;598:3;593:2;588;580:6;576:15;572:24;569:33;566:2;;;615:1;612;605:12;566:2;637:1;628:10;;647:133;661:2;658:1;655:9;647:133;;;749:14;;;745:23;;739:30;718:14;;;714:23;;707:63;672:10;;;;647:133;;;798:2;795:1;792:9;789:2;;;857:1;852:2;847;839:6;835:15;831:24;824:35;789:2;887:6;78:821;-1:-1:-1;;;;;;78:821:5:o;904:562::-;1003:6;1011;1064:2;1052:9;1043:7;1039:23;1035:32;1032:2;;;1080:1;1077;1070:12;1032:2;1113:9;1107:16;-1:-1:-1;;;;;1183:2:5;1175:6;1172:14;1169:2;;;1199:1;1196;1189:12;1169:2;1222:61;1275:7;1266:6;1255:9;1251:22;1222:61;:::i;:::-;1212:71;;1329:2;1318:9;1314:18;1308:25;1292:41;;1358:2;1348:8;1345:16;1342:2;;;1374:1;1371;1364:12;1342:2;;1397:63;1452:7;1441:8;1430:9;1426:24;1397:63;:::i;:::-;1387:73;;;1022:444;;;;;:::o;1471:437::-;1556:1;1546:12;;1603:1;1593:12;;;1614:2;;1668:4;1660:6;1656:17;1646:27;;1614:2;1721;1713:6;1710:14;1690:18;1687:38;1684:2;;;1758:77;1755:1;1748:88;1859:4;1856:1;1849:15;1887:4;1884:1;1877:15;1684:2;;1526:382;;;:::o;1913:184::-;1965:77;1962:1;1955:88;2062:4;2059:1;2052:15;2086:4;2083:1;2076:15;1945:152;1321:9279:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_558": {
									"entryPoint": 1122,
									"id": 558,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_569": {
									"entryPoint": null,
									"id": 569,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_404": {
									"entryPoint": 1472,
									"id": 404,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_201": {
									"entryPoint": null,
									"id": 201,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_222": {
									"entryPoint": 629,
									"id": 222,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_138": {
									"entryPoint": null,
									"id": 138,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_334": {
									"entryPoint": 927,
									"id": 334,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_296": {
									"entryPoint": 857,
									"id": 296,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_118": {
									"entryPoint": 483,
									"id": 118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_128": {
									"entryPoint": 912,
									"id": 128,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_269": {
									"entryPoint": 651,
									"id": 269,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_183": {
									"entryPoint": 1109,
									"id": 183,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6159:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:5"
															},
															"nodeType": "YulIf",
															"src": "111:2:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:196:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "340:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:5"
															},
															"nodeType": "YulIf",
															"src": "295:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "356:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "385:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "366:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:5",
														"type": ""
													}
												],
												"src": "215:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "493:173:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "539:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "548:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "551:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "541:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "541:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "541:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "514:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "523:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "510:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "510:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "506:32:5"
															},
															"nodeType": "YulIf",
															"src": "503:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "564:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "574:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "574:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "612:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "645:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "656:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "641:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "641:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "622:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "612:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "451:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "462:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "474:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:5",
														"type": ""
													}
												],
												"src": "406:260:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "775:224:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "821:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "833:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "823:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "823:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "796:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "805:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "792:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "817:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "788:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "788:32:5"
															},
															"nodeType": "YulIf",
															"src": "785:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "846:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "875:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "856:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "894:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "904:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "725:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "736:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "748:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "756:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "764:6:5",
														"type": ""
													}
												],
												"src": "671:328:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1091:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1137:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1146:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1149:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1139:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1139:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1139:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1112:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1121:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1108:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1108:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1133:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1104:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1104:32:5"
															},
															"nodeType": "YulIf",
															"src": "1101:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1162:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1191:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1172:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1210:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1220:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1049:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1060:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1072:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1080:6:5",
														"type": ""
													}
												],
												"src": "1004:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1358:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1368:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1391:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1376:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1368:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1435:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1428:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1421:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1327:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1338:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1349:4:5",
														"type": ""
													}
												],
												"src": "1263:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1576:476:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1586:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1596:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1590:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1614:9:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1625:2:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1607:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1607:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1637:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1657:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1651:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1651:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1641:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1695:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1680:18:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1700:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1673:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1673:34:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1716:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1725:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1720:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1785:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1814:9:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1825:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1810:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1810:17:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1829:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1806:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1806:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "1848:6:5"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1856:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1844:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1844:14:5"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1860:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1840:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1840:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1834:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1834:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:66:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1746:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1749:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1743:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1743:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1757:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1759:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1768:1:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1771:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1764:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1764:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1759:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1739:3:5",
																"statements": []
															},
															"src": "1735:140:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1909:66:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "1938:9:5"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "1949:6:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1934:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1934:22:5"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1958:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1930:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1930:31:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1963:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1923:42:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1923:42:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1890:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1893:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1887:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:13:5"
															},
															"nodeType": "YulIf",
															"src": "1884:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1984:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2019:6:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2027:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2015:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2015:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2036:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2032:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2032:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2011:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2011:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1996:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1996:45:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1992:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1992:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1984:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1545:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1567:4:5",
														"type": ""
													}
												],
												"src": "1455:597:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2248:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2282:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2293:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2278:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2298:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2271:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2271:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2321:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2332:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2317:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2337:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2310:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2392:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2403:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2388:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2388:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2408:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2381:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2381:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2381:33:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2208:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2222:4:5",
														"type": ""
													}
												],
												"src": "2057:399:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2635:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2652:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2645:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2686:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2697:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2675:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2675:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2725:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2736:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2721:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2721:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2741:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2714:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2714:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2714:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2796:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2807:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2792:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2792:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2812:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2785:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2785:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2785:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2826:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2838:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2834:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2826:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2612:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2626:4:5",
														"type": ""
													}
												],
												"src": "2461:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3038:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3055:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3066:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3048:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3048:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3048:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3100:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3085:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3105:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3078:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3078:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3128:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3139:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3124:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3144:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3117:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3117:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3215:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3233:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3245:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3256:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3241:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3233:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3015:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3029:4:5",
														"type": ""
													}
												],
												"src": "2864:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3445:230:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3462:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3473:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3455:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3507:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3492:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3485:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3485:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3535:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3546:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3531:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3551:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3524:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3524:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3617:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:18:5"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3622:10:5",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3595:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3595:38:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3595:38:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3642:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3654:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3665:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3650:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3650:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3642:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3422:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3436:4:5",
														"type": ""
													}
												],
												"src": "3271:404:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3871:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3864:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3864:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3864:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3921:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3894:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3944:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3955:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3940:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3940:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3960:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3933:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3933:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3933:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4015:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4026:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4011:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4031:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4004:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4004:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4004:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4048:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4060:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4071:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4048:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3831:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3845:4:5",
														"type": ""
													}
												],
												"src": "3680:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4260:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4270:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4270:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4327:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4300:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4366:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4339:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4339:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4339:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4432:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4417:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4437:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4410:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4410:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4453:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4465:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4237:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4251:4:5",
														"type": ""
													}
												],
												"src": "4086:400:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4665:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4682:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4693:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4675:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4675:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4716:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4727:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4712:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4712:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4705:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4705:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4705:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4766:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4751:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4771:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4842:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4871:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4882:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4867:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4867:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4859:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4642:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4656:4:5",
														"type": ""
													}
												],
												"src": "4491:401:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4998:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5008:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5020:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5031:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5016:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5016:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5008:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5050:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5043:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5043:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5043:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4967:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4978:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4989:4:5",
														"type": ""
													}
												],
												"src": "4897:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5176:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5186:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5198:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5209:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5228:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5243:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5251:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5221:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5221:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5221:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5145:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5156:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5167:4:5",
														"type": ""
													}
												],
												"src": "5079:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5316:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5343:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5345:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5345:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5345:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5332:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5339:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5329:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5329:13:5"
															},
															"nodeType": "YulIf",
															"src": "5326:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5374:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5385:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5381:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5374:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5299:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5302:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5308:3:5",
														"type": ""
													}
												],
												"src": "5268:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5450:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5472:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5474:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5474:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5474:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5466:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5469:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5463:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:8:5"
															},
															"nodeType": "YulIf",
															"src": "5460:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5515:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5518:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5511:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5503:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5432:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5435:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5441:4:5",
														"type": ""
													}
												],
												"src": "5401:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5586:382:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5596:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5610:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5616:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5606:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5606:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5596:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5627:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5657:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5653:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "5631:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5704:31:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5706:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "5720:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5728:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "5716:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5716:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5706:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5684:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:26:5"
															},
															"nodeType": "YulIf",
															"src": "5674:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5794:168:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5815:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5818:77:5",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5808:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5808:88:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5808:88:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5916:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5919:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5909:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5909:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5944:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5947:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5937:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5937:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5937:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "5750:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5773:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5781:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5770:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5770:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5747:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:38:5"
															},
															"nodeType": "YulIf",
															"src": "5744:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5566:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5575:6:5",
														"type": ""
													}
												],
												"src": "5531:437:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6005:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6022:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6025:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6015:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6015:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6015:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6119:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6112:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6112:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6143:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6146:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6136:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5973:184:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100c6576000357c010000000000000000000000000000000000000000000000000000000090048063395093511161008e578063395093511461014057806370a082311461015357806395d89b411461017c578063a457c2d714610184578063a9059cbb14610197578063dd62ed3e146101aa57600080fd5b806306fdde03146100cb578063095ea7b3146100e957806318160ddd1461010c57806323b872dd1461011e578063313ce56714610131575b600080fd5b6100d36101e3565b6040516100e091906108c1565b60405180910390f35b6100fc6100f7366004610897565b610275565b60405190151581526020016100e0565b6002545b6040519081526020016100e0565b6100fc61012c36600461085b565b61028b565b604051601281526020016100e0565b6100fc61014e366004610897565b610359565b610110610161366004610806565b600160a060020a031660009081526020819052604090205490565b6100d3610390565b6100fc610192366004610897565b61039f565b6100fc6101a5366004610897565b610455565b6101106101b8366004610828565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f290610945565b80601f016020809104026020016040519081016040528092919081815260200182805461021e90610945565b801561026b5780601f106102405761010080835404028352916020019161026b565b820191906000526020600020905b81548152906001019060200180831161024e57829003601f168201915b5050505050905090565b6000610282338484610462565b50600192915050565b60006102988484846105c0565b600160a060020a03841660009081526001602090815260408083203384529091529020548281101561033a5760405160e560020a62461bcd02815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61034e8533610349868561092e565b610462565b506001949350505050565b336000818152600160209081526040808320600160a060020a03871684529091528120549091610282918590610349908690610916565b6060600480546101f290610945565b336000908152600160209081526040808320600160a060020a03861684529091528120548281101561043c5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610331565b61044b3385610349868561092e565b5060019392505050565b60006102823384846105c0565b600160a060020a0383166104e05760405160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a03821661055f5760405160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600160a060020a03831661063f5760405160e560020a62461bcd02815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a0382166106be5760405160e560020a62461bcd02815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610331565b600160a060020a038316600090815260208190526040902054818110156107505760405160e560020a62461bcd02815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610331565b61075a828261092e565b600160a060020a038086166000908152602081905260408082209390935590851681529081208054849290610790908490610916565b9250508190555082600160a060020a031684600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107dc91815260200190565b60405180910390a350505050565b8035600160a060020a038116811461080157600080fd5b919050565b60006020828403121561081857600080fd5b610821826107ea565b9392505050565b6000806040838503121561083b57600080fd5b610844836107ea565b9150610852602084016107ea565b90509250929050565b60008060006060848603121561087057600080fd5b610879846107ea565b9250610887602085016107ea565b9150604084013590509250925092565b600080604083850312156108aa57600080fd5b6108b3836107ea565b946020939093013593505050565b600060208083528351808285015260005b818110156108ee578581018301518582016040015282016108d2565b81811115610900576000604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561092957610929610999565b500190565b60008282101561094057610940610999565b500390565b60028104600182168061095957607f821691505b60208210811415610993577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212206795aa3b6efa93ab265d32a7c12fd943e6c226440fd45c46fe2068bdec146c1064736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV DUP1 PUSH4 0x39509351 GT PUSH2 0x8E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x131 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x12C CALLDATASIZE PUSH1 0x4 PUSH2 0x85B JUMP JUMPDEST PUSH2 0x28B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE0 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x359 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x806 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xD3 PUSH2 0x390 JUMP JUMPDEST PUSH2 0xFC PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH2 0xFC PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x455 JUMP JUMPDEST PUSH2 0x110 PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x828 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F2 SWAP1 PUSH2 0x945 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x21E SWAP1 PUSH2 0x945 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x26B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x240 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x26B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x24E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 CALLER DUP5 DUP5 PUSH2 0x462 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x298 DUP5 DUP5 DUP5 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x33A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x34E DUP6 CALLER PUSH2 0x349 DUP7 DUP6 PUSH2 0x92E JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x282 SWAP2 DUP6 SWAP1 PUSH2 0x349 SWAP1 DUP7 SWAP1 PUSH2 0x916 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1F2 SWAP1 PUSH2 0x945 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x43C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x44B CALLER DUP6 PUSH2 0x349 DUP7 DUP6 PUSH2 0x92E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 CALLER DUP5 DUP5 PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x55F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x750 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x331 JUMP JUMPDEST PUSH2 0x75A DUP3 DUP3 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x790 SWAP1 DUP5 SWAP1 PUSH2 0x916 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x7DC SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND DUP2 EQ PUSH2 0x801 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x818 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x821 DUP3 PUSH2 0x7EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x844 DUP4 PUSH2 0x7EA JUMP JUMPDEST SWAP2 POP PUSH2 0x852 PUSH1 0x20 DUP5 ADD PUSH2 0x7EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x879 DUP5 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP PUSH2 0x887 PUSH1 0x20 DUP6 ADD PUSH2 0x7EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B3 DUP4 PUSH2 0x7EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8EE JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x8D2 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x999 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x940 JUMPI PUSH2 0x940 PUSH2 0x999 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x959 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x993 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x95AA3B6EFA93AB26 0x5D ORIGIN 0xA7 0xC1 0x2F 0xD9 NUMBER 0xE6 0xC2 0x26 DIFFICULTY 0xF 0xD4 0x5C CHAINID INVALID KECCAK256 PUSH9 0xBDEC146C1064736F6C PUSH4 0x43000805 STOP CALLER ",
							"sourceMap": "1321:9279:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;:::i;:::-;;:::i;:::-;;;1428:14:5;;1421:22;1403:41;;1391:2;1376:18;4174:166:1;1358:92:5;3165:106:1;3252:12;;3165:106;;;5043:25:5;;;5031:2;5016:18;3165:106:1;4998:76:5;4807:414:1;;;;;;:::i;:::-;;:::i;3014:91::-;;;3096:2;5221:36:5;;5209:2;5194:18;3014:91:1;5176:87:5;5616:212:1;;;;;;:::i;:::-;;:::i;3329:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:1;3403:7;3429:18;;;;;;;;;;;;3329:125;2288:102;;;:::i;6315:371::-;;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;:::i;:::-;;:::i;3887:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:1;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;2077:98;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:4;4296:7:1;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:1;4174:166;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:1;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:4;5003:33:1;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;;;5046:79:1;;3473:2:5;5046:79:1;;;3455:21:5;3512:2;3492:18;;;3485:30;3551:34;3531:18;;;3524:62;3622:10;3602:18;;;3595:38;3650:19;;5046:79:1;;;;;;;;;5135:57;5144:6;665:10:4;5166:25:1;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:1;;4807:414;-1:-1:-1;;;;4807:414:1:o;5616:212::-;665:10:4;5704:4:1;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:1;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;2288:102::-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:4;6408:4:1;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:1;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;;;6495:85:1;;4693:2:5;6495:85:1;;;4675:21:5;4732:2;4712:18;;;4705:30;4771:34;4751:18;;;4744:62;4842:7;4822:18;;;4815:35;4867:19;;6495:85:1;4665:227:5;6495:85:1;6590:67;665:10:4;6613:7:1;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:1;;6315:371;-1:-1:-1;;;6315:371:1:o;3657:172::-;3743:4;3759:42;665:10:4;3783:9:1;3794:6;3759:9;:42::i;9579:340::-;-1:-1:-1;;;;;9680:19:1;;9672:68;;;;-1:-1:-1;;;;;9672:68:1;;4288:2:5;9672:68:1;;;4270:21:5;4327:2;4307:18;;;4300:30;4366:34;4346:18;;;4339:62;4437:6;4417:18;;;4410:34;4461:19;;9672:68:1;4260:226:5;9672:68:1;-1:-1:-1;;;;;9758:21:1;;9750:68;;;;-1:-1:-1;;;;;9750:68:1;;2663:2:5;9750:68:1;;;2645:21:5;2702:2;2682:18;;;2675:30;2741:34;2721:18;;;2714:62;2812:4;2792:18;;;2785:32;2834:19;;9750:68:1;2635:224:5;9750:68:1;-1:-1:-1;;;;;9829:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;5043:25:5;;;9880:32:1;;5016:18:5;9880:32:1;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:1;;7257:70;;;;-1:-1:-1;;;;;7257:70:1;;3882:2:5;7257:70:1;;;3864:21:5;3921:2;3901:18;;;3894:30;3960:34;3940:18;;;3933:62;4031:7;4011:18;;;4004:35;4056:19;;7257:70:1;3854:227:5;7257:70:1;-1:-1:-1;;;;;7345:23:1;;7337:71;;;;-1:-1:-1;;;;;7337:71:1;;2259:2:5;7337:71:1;;;2241:21:5;2298:2;2278:18;;;2271:30;2337:34;2317:18;;;2310:62;2408:5;2388:18;;;2381:33;2431:19;;7337:71:1;2231:225:5;7337:71:1;-1:-1:-1;;;;;7501:17:1;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;;;7528:74:1;;3066:2:5;7528:74:1;;;3048:21:5;3105:2;3085:18;;;3078:30;3144:34;3124:18;;;3117:62;3215:8;3195:18;;;3188:36;3241:19;;7528:74:1;3038:228:5;7528:74:1;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:1;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:1;7719:6;-1:-1:-1;;;;;7710:35:1;;7738:6;7710:35;;;;5043:25:5;;5031:2;5016:18;;4998:76;7710:35:1;;;;;;;;7247:505;7160:592;;;:::o;14:196:5:-;82:20;;-1:-1:-1;;;;;131:54:5;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:186::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;343:1;340;333:12;295:2;366:29;385:9;366:29;:::i;:::-;356:39;285:116;-1:-1:-1;;;285:116:5:o;406:260::-;474:6;482;535:2;523:9;514:7;510:23;506:32;503:2;;;551:1;548;541:12;503:2;574:29;593:9;574:29;:::i;:::-;564:39;;622:38;656:2;645:9;641:18;622:38;:::i;:::-;612:48;;493:173;;;;;:::o;671:328::-;748:6;756;764;817:2;805:9;796:7;792:23;788:32;785:2;;;833:1;830;823:12;785:2;856:29;875:9;856:29;:::i;:::-;846:39;;904:38;938:2;927:9;923:18;904:38;:::i;:::-;894:48;;989:2;978:9;974:18;961:32;951:42;;775:224;;;;;:::o;1004:254::-;1072:6;1080;1133:2;1121:9;1112:7;1108:23;1104:32;1101:2;;;1149:1;1146;1139:12;1101:2;1172:29;1191:9;1172:29;:::i;:::-;1162:39;1248:2;1233:18;;;;1220:32;;-1:-1:-1;;;1091:167:5:o;1455:597::-;1567:4;1596:2;1625;1614:9;1607:21;1657:6;1651:13;1700:6;1695:2;1684:9;1680:18;1673:34;1725:1;1735:140;1749:6;1746:1;1743:13;1735:140;;;1844:14;;;1840:23;;1834:30;1810:17;;;1829:2;1806:26;1799:66;1764:10;;1735:140;;;1893:6;1890:1;1887:13;1884:2;;;1963:1;1958:2;1949:6;1938:9;1934:22;1930:31;1923:42;1884:2;-1:-1:-1;2036:2:5;2015:15;-1:-1:-1;;2011:29:5;1996:45;;;;2043:2;1992:54;;1576:476;-1:-1:-1;;;1576:476:5:o;5268:128::-;5308:3;5339:1;5335:6;5332:1;5329:13;5326:2;;;5345:18;;:::i;:::-;-1:-1:-1;5381:9:5;;5316:80::o;5401:125::-;5441:4;5469:1;5466;5463:8;5460:2;;;5474:18;;:::i;:::-;-1:-1:-1;5511:9:5;;5450:76::o;5531:437::-;5616:1;5606:12;;5663:1;5653:12;;;5674:2;;5728:4;5720:6;5716:17;5706:27;;5674:2;5781;5773:6;5770:14;5750:18;5747:38;5744:2;;;5818:77;5815:1;5808:88;5919:4;5916:1;5909:15;5947:4;5944:1;5937:15;5744:2;;5586:382;;;:::o;5973:184::-;6025:77;6022:1;6015:88;6122:4;6119:1;6112:15;6146:4;6143:1;6136:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "511600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "22752",
								"balanceOf(address)": "781",
								"decimals()": "271",
								"decreaseAllowance(address,uint256)": "23302",
								"increaseAllowance(address,uint256)": "23224",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "431",
								"transfer(address,uint256)": "43721",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1970,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1965,
									"end": 1970,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1965,
									"end": 1978,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 1995,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1988,
									"end": 1995,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1988,
									"end": 2005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 2012,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 899,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 899,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 68,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 114,
									"end": 118,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 106,
									"end": 112,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 119,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 98,
									"end": 125,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 90,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 139,
									"end": 140,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 137,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 129,
									"end": 141,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 88,
									"end": 90,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 90,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 168,
									"end": 174,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 162,
									"end": 175,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 231,
									"end": 233,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 227,
									"end": 229,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 224,
									"end": 234,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 221,
									"end": 223,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 221,
									"end": 223,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 221,
									"end": 223,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 237,
									"end": 255,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 312,
									"end": 314,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 315,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 280,
									"end": 282,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 366,
									"end": 379,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 366,
									"end": 379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 362,
									"end": 384,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 362,
									"end": 384,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 386,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 358,
									"end": 389,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 354,
									"end": 394,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 342,
									"end": 395,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 410,
									"end": 428,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 430,
									"end": 452,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 407,
									"end": 453,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 404,
									"end": 406,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 404,
									"end": 406,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 404,
									"end": 406,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 456,
									"end": 474,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 496,
									"end": 506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 492,
									"end": 494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 507,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 531,
									"end": 533,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 523,
									"end": 529,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 516,
									"end": 534,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 553,
									"end": 557,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 557,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 543,
									"end": 557,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 598,
									"end": 601,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 593,
									"end": 595,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 588,
									"end": 590,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 580,
									"end": 586,
									"name": "DUP9",
									"source": 5
								},
								{
									"begin": 576,
									"end": 591,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 596,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 569,
									"end": 602,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 568,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 566,
									"end": 568,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 615,
									"end": 616,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 613,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 605,
									"end": 617,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 566,
									"end": 568,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 566,
									"end": 568,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 637,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 628,
									"end": 638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 661,
									"end": 663,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 658,
									"end": 659,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 655,
									"end": 664,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 749,
									"end": 763,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 745,
									"end": 768,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 739,
									"end": 769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 718,
									"end": 732,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 714,
									"end": 737,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 707,
									"end": 770,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 672,
									"end": 682,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 647,
									"end": 780,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 780,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 798,
									"end": 800,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 795,
									"end": 796,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 792,
									"end": 801,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 789,
									"end": 791,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 789,
									"end": 791,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 857,
									"end": 858,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 852,
									"end": 854,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 847,
									"end": 849,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 839,
									"end": 845,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 835,
									"end": 850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 831,
									"end": 855,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 824,
									"end": 859,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 789,
									"end": 791,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 789,
									"end": 791,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 887,
									"end": 893,
									"name": "SWAP7",
									"source": 5
								},
								{
									"begin": 78,
									"end": 899,
									"name": "SWAP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 78,
									"end": 899,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 904,
									"end": 1466,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1003,
									"end": 1009,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1064,
									"end": 1066,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1043,
									"end": 1050,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1039,
									"end": 1062,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1035,
									"end": 1067,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1077,
									"end": 1078,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1070,
									"end": 1082,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 1032,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1113,
									"end": 1122,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1107,
									"end": 1123,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "EXP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1183,
									"end": 1185,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1175,
									"end": 1181,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1172,
									"end": 1186,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1199,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1189,
									"end": 1201,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 1169,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1275,
									"end": 1282,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1266,
									"end": 1272,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1255,
									"end": 1264,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1251,
									"end": 1273,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1222,
									"end": 1283,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1283,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1318,
									"end": 1327,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1314,
									"end": 1332,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1333,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1292,
									"end": 1333,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1358,
									"end": 1360,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1348,
									"end": 1356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1374,
									"end": 1375,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1372,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1364,
									"end": 1376,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1344,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1452,
									"end": 1459,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1441,
									"end": 1449,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1430,
									"end": 1439,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1426,
									"end": 1450,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1387,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1466,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1471,
									"end": 1908,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1471,
									"end": 1908,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1556,
									"end": 1557,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1546,
									"end": 1558,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1668,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1660,
									"end": 1666,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1656,
									"end": 1673,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1646,
									"end": 1673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1614,
									"end": 1616,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1721,
									"end": 1723,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1713,
									"end": 1719,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1724,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1708,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1725,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1758,
									"end": 1835,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1755,
									"end": 1756,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1748,
									"end": 1836,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1859,
									"end": 1863,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1856,
									"end": 1857,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1849,
									"end": 1864,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1891,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1884,
									"end": 1885,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1877,
									"end": 1892,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1684,
									"end": 1686,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1908,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1908,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1908,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1526,
									"end": 1908,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1913,
									"end": 2097,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1913,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1965,
									"end": 2042,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1962,
									"end": 1963,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1955,
									"end": 2043,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2062,
									"end": 2066,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 2059,
									"end": 2060,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2052,
									"end": 2067,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2086,
									"end": 2090,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 2083,
									"end": 2084,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2076,
									"end": 2091,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1945,
									"end": 2097,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1945,
									"end": 2097,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10600,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206795aa3b6efa93ab265d32a7c12fd943e6c226440fd45c46fe2068bdec146c1064736f6c63430008050033",
									".code": [
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 10600,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1442,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1376,
											"end": 1394,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1358,
											"end": 1450,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3252,
											"end": 3264,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 4998,
											"end": 5074,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 5221,
											"end": 5257,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5221,
											"end": 5257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5209,
											"end": 5211,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3014,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 5176,
											"end": 5263,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3410,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3329,
											"end": 3454,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 3983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4020,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 4036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2131,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2163,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2077,
											"end": 2175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4257,
											"end": 4261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4296,
											"end": 4303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4311,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4273,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4273,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4329,
											"end": 4333,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4340,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4929,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 5000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5022,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5036,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5080,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3476,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3485,
											"end": 3515,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3585,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3622,
											"end": 3632,
											"name": "PUSH",
											"source": 5,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3669,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3650,
											"end": 3669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5046,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5144,
											"end": 5150,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5185,
											"end": 5191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5166,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5135,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5210,
											"end": 5214,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5210,
											"end": 5214,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 5221,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5777,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5786,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5720,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 5720,
											"end": 5800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5750,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 5752,
											"end": 5799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2288,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2344,
											"end": 2357,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2369,
											"end": 2383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6408,
											"end": 6412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6462,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6476,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6503,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4695,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4675,
											"end": 4696,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4712,
											"end": 4730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4735,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4771,
											"end": 4805,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4744,
											"end": 4806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4842,
											"end": 4849,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4867,
											"end": 4886,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4867,
											"end": 4886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4665,
											"end": 4892,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6495,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6613,
											"end": 6620,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6641,
											"end": 6656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6638,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6622,
											"end": 6656,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6590,
											"end": 6657,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 6590,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6675,
											"end": 6679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6686,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3657,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3783,
											"end": 3792,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3759,
											"end": 3801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9680,
											"end": 9699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 9699,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4400,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4339,
											"end": 4401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4437,
											"end": 4443,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4417,
											"end": 4435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4410,
											"end": 4444,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4461,
											"end": 4480,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4461,
											"end": 4480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4260,
											"end": 4486,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 9672,
											"end": 9740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2645,
											"end": 2666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2682,
											"end": 2700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2705,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2775,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2776,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2834,
											"end": 2853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2635,
											"end": 2859,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9750,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9840,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9865,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9865,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9912,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9579,
											"end": 9919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7265,
											"end": 7285,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3864,
											"end": 3885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3923,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3994,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 3995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4031,
											"end": 4038,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4011,
											"end": 4029,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4004,
											"end": 4039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4056,
											"end": 4075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3854,
											"end": 4081,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7257,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7345,
											"end": 7368,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7345,
											"end": 7368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2298,
											"end": 2300,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2271,
											"end": 2301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2371,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2317,
											"end": 2335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2408,
											"end": 2413,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2414,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2431,
											"end": 2450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2231,
											"end": 2456,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7337,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7498,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3066,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3048,
											"end": 3069,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3085,
											"end": 3103,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3078,
											"end": 3108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3178,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3142,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3215,
											"end": 3223,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3188,
											"end": 3224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3241,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3241,
											"end": 3260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3038,
											"end": 3266,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7528,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7648,
											"end": 7654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 7632,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7654,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7612,
											"end": 7621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7664,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5074,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7745,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7752,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "EXP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 113,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 63,
											"end": 210,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 215,
											"end": 401,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 341,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 333,
											"end": 345,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 295,
											"end": 297,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 385,
											"end": 394,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 366,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 366,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 356,
											"end": 395,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 285,
											"end": 401,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 285,
											"end": 401,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 406,
											"end": 666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 474,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 523,
											"end": 532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 514,
											"end": 521,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 510,
											"end": 533,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 506,
											"end": 538,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 503,
											"end": 505,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 551,
											"end": 552,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 541,
											"end": 553,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 503,
											"end": 505,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 503,
											"end": 505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 593,
											"end": 602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 574,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 574,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 564,
											"end": 603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 656,
											"end": 658,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 645,
											"end": 654,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 641,
											"end": 659,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 622,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 622,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 612,
											"end": 660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 666,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 671,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 805,
											"end": 814,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 796,
											"end": 803,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 792,
											"end": 815,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 788,
											"end": 820,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 787,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 833,
											"end": 834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 823,
											"end": 835,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 787,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 785,
											"end": 787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 875,
											"end": 884,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 856,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 856,
											"end": 885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 846,
											"end": 885,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 846,
											"end": 885,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 938,
											"end": 940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 923,
											"end": 941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 904,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 904,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 894,
											"end": 942,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 894,
											"end": 942,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 978,
											"end": 987,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 951,
											"end": 993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 951,
											"end": 993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 999,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1004,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1135,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1130,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1108,
											"end": 1131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1136,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1149,
											"end": 1150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1147,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1139,
											"end": 1151,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1101,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1233,
											"end": 1251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1258,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1455,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1567,
											"end": 1571,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1596,
											"end": 1598,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1623,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1657,
											"end": 1663,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1700,
											"end": 1706,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1680,
											"end": 1698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1673,
											"end": 1707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1755,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1756,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1844,
											"end": 1858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1834,
											"end": 1864,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1806,
											"end": 1832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1735,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1887,
											"end": 1900,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 1960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1949,
											"end": 1955,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1947,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1930,
											"end": 1961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1884,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2038,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2015,
											"end": 2030,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2011,
											"end": 2040,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1996,
											"end": 2041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1992,
											"end": 2046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1992,
											"end": 2046,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2052,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1576,
											"end": 2052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5268,
											"end": 5396,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5268,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5311,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5335,
											"end": 5341,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5329,
											"end": 5342,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5326,
											"end": 5328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5345,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5381,
											"end": 5390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5381,
											"end": 5390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5316,
											"end": 5396,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5401,
											"end": 5526,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5401,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5445,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5469,
											"end": 5470,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5471,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5460,
											"end": 5462,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5474,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5526,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5531,
											"end": 5968,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 5531,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5606,
											"end": 5618,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5653,
											"end": 5665,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 5720,
											"end": 5726,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5716,
											"end": 5733,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5674,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5781,
											"end": 5783,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5773,
											"end": 5779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5770,
											"end": 5784,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5785,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5818,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5808,
											"end": 5896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 5923,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5909,
											"end": 5924,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5947,
											"end": 5951,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5944,
											"end": 5945,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5937,
											"end": 5952,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5586,
											"end": 5968,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5973,
											"end": 6157,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5973,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6025,
											"end": 6102,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6022,
											"end": 6023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6015,
											"end": 6103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6126,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6119,
											"end": 6120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6150,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6143,
											"end": 6144,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6136,
											"end": 6151,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The defaut value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 79,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 85,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 87,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 91,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Loren.sol:22:33:\n   |\n22 |   function _beforeTokenTransfer(address from, address to, uint256 amount) internal override\n   |                                 ^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 582,
					"file": "contracts/Loren.sol",
					"start": 570
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Loren.sol:22:47:\n   |\n22 |   function _beforeTokenTransfer(address from, address to, uint256 amount) internal override\n   |                                               ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 594,
					"file": "contracts/Loren.sol",
					"start": 584
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Loren.sol:22:59:\n   |\n22 |   function _beforeTokenTransfer(address from, address to, uint256 amount) internal override\n   |                                                           ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 610,
					"file": "contracts/Loren.sol",
					"start": 596
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Loren.sol": {
				"ast": {
					"absolutePath": "contracts/Loren.sol",
					"exportedSymbols": {
						"Context": [
							696
						],
						"ERC20": [
							570
						],
						"IERC20": [
							648
						],
						"IERC20Metadata": [
							673
						],
						"MyERC20": [
							63
						]
					},
					"id": 64,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 64,
							"sourceUnit": 571,
							"src": "56:108:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 570,
										"src": "186:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "186:5:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63,
								570,
								673,
								648,
								696
							],
							"name": "MyERC20",
							"nameLocation": "175:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "160f00c1",
									"id": 7,
									"mutability": "mutable",
									"name": "token_transfer_count",
									"nameLocation": "211:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "196:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 5,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "234:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "277:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 15,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "289:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "289:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31303030",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "301:10:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"value": "1000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														],
														"id": 14,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "283:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "283:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "283:29:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "546f6b656e",
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
														"typeString": "literal_string \"Token\""
													},
													"value": "Token"
												},
												{
													"hexValue": "544b4e",
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "270:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9ee187a325c80a9ca820b4f297a58770bf5a85fede3756f8e7e9d14ff37d7b66",
														"typeString": "literal_string \"TKN\""
													},
													"value": "TKN"
												}
											],
											"id": 12,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 9,
												"name": "ERC20",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 570,
												"src": "255:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "255:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:0:0"
									},
									"scope": 63,
									"src": "240:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "412:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 29,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "424:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 30,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "433:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 28,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "418:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "418:22:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "367:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "380:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "372:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "397:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "389:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "371:33:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:0"
									},
									"scope": 63,
									"src": "358:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "503:33:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 42,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 36,
															"src": "515:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 43,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 41,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "509:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "509:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "509:22:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "458:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "471:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "463:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "488:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "480:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:33:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "503:0:0"
									},
									"scope": 63,
									"src": "449:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										569
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "632:36:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "token_transfer_count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "638:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "662:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "638:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "638:25:0"
											}
										]
									},
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "549:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 55,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "621:8:0"
									},
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "578:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "570:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "592:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "584:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "604:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "596:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:42:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "632:0:0"
									},
									"scope": 63,
									"src": "540:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 64,
							"src": "166:504:0",
							"usedErrors": []
						}
					],
					"src": "32:638:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							696
						],
						"ERC20": [
							570
						],
						"IERC20": [
							648
						],
						"IERC20Metadata": [
							673
						]
					},
					"id": 571,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 65,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 66,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 649,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 67,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 674,
							"src": "81:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 571,
							"sourceUnit": 697,
							"src": "123:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 70,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 696,
										"src": "1339:7:1"
									},
									"id": 71,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:1"
								},
								{
									"baseName": {
										"id": 72,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 648,
										"src": "1348:6:1"
									},
									"id": 73,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:1"
								},
								{
									"baseName": {
										"id": 74,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 673,
										"src": "1356:14:1"
									},
									"id": 75,
									"nodeType": "InheritanceSpecifier",
									"src": "1356:14:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 69,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 570,
							"linearizedBaseContracts": [
								570,
								673,
								648,
								696
							],
							"name": "ERC20",
							"nameLocation": "1330:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 79,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1414:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "1377:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 78,
										"keyType": {
											"id": 76,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1386:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 77,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1397:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 85,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1488:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "1430:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 84,
										"keyType": {
											"id": 80,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1439:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1430:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 83,
											"keyType": {
												"id": 81,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1459:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1450:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 82,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1470:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 87,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1522:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "1506:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 86,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1506:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 89,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1556:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "1541:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 88,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1541:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1582:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 570,
									"src": "1567:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 90,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1567:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1955:57:1",
										"statements": [
											{
												"expression": {
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 99,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "1965:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 100,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1973:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1965:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "1965:13:1"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1988:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1988:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1988:17:1"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "1596:297:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1925:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1911:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 93,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1911:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1946:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "1932:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1932:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:44:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1955:0:1"
									},
									"scope": 570,
									"src": "1898:114:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										660
									],
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "2146:29:1",
										"statements": [
											{
												"expression": {
													"id": 115,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 89,
													"src": "2163:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 114,
												"id": 116,
												"nodeType": "Return",
												"src": "2156:12:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2018:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2086:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2113:8:1"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2090:2:1"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2131:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 112,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2131:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2130:15:1"
									},
									"scope": 570,
									"src": "2077:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										666
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2359:31:1",
										"statements": [
											{
												"expression": {
													"id": 125,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 91,
													"src": "2376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "2369:14:1"
											}
										]
									},
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "2181:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2297:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 121,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2326:8:1"
									},
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2344:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2344:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2343:15:1"
									},
									"scope": 570,
									"src": "2288:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										672
									],
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "3079:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3096:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 134,
												"id": 136,
												"nodeType": "Return",
												"src": "3089:9:1"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2396:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3023:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 131,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3054:8:1"
									},
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3031:2:1"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3072:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 132,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3072:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3071:7:1"
									},
									"scope": 570,
									"src": "3014:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										579
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "3235:36:1",
										"statements": [
											{
												"expression": {
													"id": 145,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 87,
													"src": "3252:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 146,
												"nodeType": "Return",
												"src": "3245:19:1"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "3111:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3174:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 141,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3208:8:1"
									},
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3226:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:9:1"
									},
									"scope": 570,
									"src": "3165:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										587
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "3412:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 157,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "3429:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 159,
													"indexExpression": {
														"id": 158,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "3439:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3429:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 156,
												"id": 160,
												"nodeType": "Return",
												"src": "3422:25:1"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "3277:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3338:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3385:8:1"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3356:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "3348:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3348:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3347:17:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "3403:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3403:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3402:9:1"
									},
									"scope": 570,
									"src": "3329:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										597
									],
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3749:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "3769:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3769:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3783:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "3794:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 173,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3759:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3759:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "3759:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3818:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 172,
												"id": 181,
												"nodeType": "Return",
												"src": "3811:11:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "3460:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3666:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3725:8:1"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3683:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3675:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3702:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3694:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3674:35:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "3743:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3743:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:6:1"
									},
									"scope": 570,
									"src": "3657:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										607
									],
									"body": {
										"id": 200,
										"nodeType": "Block",
										"src": "3985:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 194,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "4002:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 196,
														"indexExpression": {
															"id": 195,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "4014:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4002:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 198,
													"indexExpression": {
														"id": 197,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "4021:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4002:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 193,
												"id": 199,
												"nodeType": "Return",
												"src": "3995:34:1"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "3835:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3896:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 190,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3958:8:1"
									},
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3914:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3906:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3906:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3929:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3921:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:32:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "3976:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3975:9:1"
									},
									"scope": 570,
									"src": "3887:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										617
									],
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "4263:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 213,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "4282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 215,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "4296:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "4305:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 212,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "4273:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "4273:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 211,
												"id": 220,
												"nodeType": "Return",
												"src": "4322:11:1"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "4042:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4183:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 208,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4239:8:1"
									},
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4216:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4208:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4208:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4190:33:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4256:6:1"
									},
									"scope": 570,
									"src": "4174:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										629
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4919:302:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 236,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "4939:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 237,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4947:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 238,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4958:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 235,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "4929:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4929:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "4929:36:1"
											},
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4984:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "4976:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4976:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 243,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "5003:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 245,
														"indexExpression": {
															"id": 244,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "5015:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5003:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 248,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 246,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5023:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5023:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5003:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4976:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "5054:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5074:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5082:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5046:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5046:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5046:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "5144:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 259,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "5152:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5152:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 261,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "5166:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 262,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "5185:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5166:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5135:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5135:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "5135:57:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5210:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 234,
												"id": 267,
												"nodeType": "Return",
												"src": "5203:11:1"
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4346:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4816:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4895:8:1"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4837:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4829:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4853:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4845:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4872:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4864:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:51:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4913:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4913:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4912:6:1"
									},
									"scope": 570,
									"src": "4807:414:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "5710:118:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 280,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "5729:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5729:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 282,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "5743:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 283,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "5752:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 286,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 284,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "5764:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5764:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5752:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 288,
																"indexExpression": {
																	"id": 287,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "5778:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5752:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 289,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "5789:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5752:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 279,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "5720:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5720:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 292,
												"nodeType": "ExpressionStatement",
												"src": "5720:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5817:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 278,
												"id": 294,
												"nodeType": "Return",
												"src": "5810:11:1"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "5227:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5625:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5651:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5643:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5643:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5668:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5660:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5642:37:1"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "5704:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5704:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5703:6:1"
									},
									"scope": 570,
									"src": "5616:212:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "6414:272:1",
										"statements": [
											{
												"assignments": [
													307
												],
												"declarations": [
													{
														"constant": false,
														"id": 307,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6432:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "6424:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 306,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6424:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 314,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 308,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "6451:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 311,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 309,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "6463:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6463:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6451:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 313,
													"indexExpression": {
														"id": 312,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "6477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6451:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6424:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 316,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "6503:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 317,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "6523:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6503:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6540:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 315,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6495:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6495:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 321,
												"nodeType": "ExpressionStatement",
												"src": "6495:85:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 323,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "6599:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6599:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "6613:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 326,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "6622:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 327,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "6641:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6622:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 322,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "6590:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6590:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6590:67:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6675:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 305,
												"id": 332,
												"nodeType": "Return",
												"src": "6668:11:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "5834:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6324:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6350:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6342:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6342:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6367:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6359:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6341:42:1"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "6408:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 303,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6408:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:6:1"
									},
									"scope": 570,
									"src": "6315:371:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "7247:505:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 345,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 337,
																"src": "7265:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7283:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7275:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 346,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7275:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7275:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7265:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7287:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7257:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7257:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "7257:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "7345:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7366:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7358:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7358:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7358:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7345:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7370:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7337:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7337:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "7337:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 365,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "7440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 366,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7448:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 367,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "7419:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7419:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "7419:47:1"
											},
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "7485:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "7477:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7477:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 375,
												"initialValue": {
													"baseExpression": {
														"id": 372,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7501:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 374,
													"indexExpression": {
														"id": 373,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "7511:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7501:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7477:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 377,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "7536:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 378,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "7553:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7536:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7561:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 376,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7528:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "7528:74:1"
											},
											{
												"expression": {
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 383,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7612:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 385,
														"indexExpression": {
															"id": 384,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "7622:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7612:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 386,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "7632:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7648:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7632:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7612:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 390,
												"nodeType": "ExpressionStatement",
												"src": "7612:42:1"
											},
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 391,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7664:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7674:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7664:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 394,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "7688:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7664:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "7664:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 398,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "7719:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 399,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "7727:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 400,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7738:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "7710:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7710:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "7705:40:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "6692:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7169:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7187:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "7179:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7203:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "7195:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7222:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "7214:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7214:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7178:51:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7247:0:1"
									},
									"scope": 570,
									"src": "7160:592:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "8088:265:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 413,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "8106:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8125:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8117:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 414,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8117:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8117:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8106:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8129:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8098:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "8098:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8203:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8195:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 423,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8195:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8195:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "8207:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8216:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 422,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "8174:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8174:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "8174:49:1"
											},
											{
												"expression": {
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 431,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "8234:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 432,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "8250:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8234:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "8234:22:1"
											},
											{
												"expression": {
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 435,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "8266:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 437,
														"indexExpression": {
															"id": 436,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "8276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8266:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 438,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "8288:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8266:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "8266:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8326:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8318:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 442,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8318:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8318:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "8330:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "8339:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "8309:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8309:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "EmitStatement",
												"src": "8304:42:1"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "7758:260:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8032:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8046:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "8038:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8038:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8063:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "8055:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8055:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8037:33:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8088:0:1"
									},
									"scope": 570,
									"src": "8023:330:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "8738:418:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8756:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8775:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8767:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8767:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8767:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8756:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8779:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8748:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "8748:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8847:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8864:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8856:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8856:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8868:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "8826:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8826:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "8826:49:1"
											},
											{
												"assignments": [
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "8894:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "8886:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 478,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8886:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 483,
												"initialValue": {
													"baseExpression": {
														"id": 480,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "8911:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 482,
													"indexExpression": {
														"id": 481,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "8921:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8911:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8886:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "8947:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 486,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "8965:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8947:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8973:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8939:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8939:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "8939:71:1"
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 491,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "9020:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 493,
														"indexExpression": {
															"id": 492,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9030:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9020:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 494,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "9041:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 495,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9058:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9041:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9020:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "9020:44:1"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "9074:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 500,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "9090:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9074:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "9074:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 504,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "9121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9138:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9130:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 505,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9130:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9130:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 509,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "9142:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 503,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "9112:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9112:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "EmitStatement",
												"src": "9107:42:1"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "8359:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8682:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8696:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "8688:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8713:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "8705:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8705:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8687:33:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8738:0:1"
									},
									"scope": 570,
									"src": "8673:483:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "9662:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 524,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "9680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9697:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9689:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 525,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9689:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9689:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9680:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9701:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9672:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "9672:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "9758:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9777:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9769:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9769:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9769:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9758:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9781:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9750:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9750:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "9750:68:1"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 543,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "9829:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 546,
															"indexExpression": {
																"id": 544,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "9841:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9829:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 547,
														"indexExpression": {
															"id": 545,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "9848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9829:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 520,
														"src": "9859:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9829:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "9829:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 552,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "9889:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "9896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 554,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "9905:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 551,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9880:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9880:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "EmitStatement",
												"src": "9875:37:1"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "9162:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9588:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9605:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "9597:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9620:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "9612:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9637:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "9629:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9596:48:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9662:0:1"
									},
									"scope": 570,
									"src": "9579:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "10595:3:1",
										"statements": []
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "9925:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "10515:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10544:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "10536:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10536:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10558:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "10550:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10550:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10570:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "10562:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10535:42:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10595:0:1"
									},
									"scope": 570,
									"src": "10506:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 571,
							"src": "1321:9279:1",
							"usedErrors": []
						}
					],
					"src": "33:10568:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							648
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 648,
							"linearizedBaseContracts": [
								648
							],
							"name": "IERC20",
							"nameLocation": "139:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 579,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:2"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "269:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:2"
									},
									"scope": 648,
									"src": "223:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "380:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:2"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "420:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:2"
									},
									"scope": 648,
									"src": "361:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "667:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "686:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:2"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "720:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:2"
									},
									"scope": 648,
									"src": "649:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1020:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1035:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:2"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:2"
									},
									"scope": 648,
									"src": "1001:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:2"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1805:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:2"
									},
									"scope": 648,
									"src": "1737:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2140:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2156:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2175:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:2"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2209:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:2"
									},
									"scope": 648,
									"src": "2118:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 638,
									"name": "Transfer",
									"nameLocation": "2390:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2399:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2421:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "2441:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:2"
									},
									"src": "2384:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 647,
									"name": "Approval",
									"nameLocation": "2621:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2630:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2653:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "2678:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:2"
									},
									"src": "2615:78:2"
								}
							],
							"scope": 649,
							"src": "129:2566:2",
							"usedErrors": []
						}
					],
					"src": "33:2663:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							648
						],
						"IERC20Metadata": [
							673
						]
					},
					"id": 674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 674,
							"sourceUnit": 649,
							"src": "58:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 653,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 648,
										"src": "228:6:3"
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "228:6:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "83:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 673,
							"linearizedBaseContracts": [
								673,
								648
							],
							"name": "IERC20Metadata",
							"nameLocation": "210:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "241:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "309:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "339:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 657,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "339:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:15:3"
									},
									"scope": 673,
									"src": "300:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "360:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 666,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "430:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:3"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "462:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 663,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "462:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "461:15:3"
									},
									"scope": 673,
									"src": "421:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "483:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "562:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "570:2:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "596:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 669,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "596:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:7:3"
									},
									"scope": 673,
									"src": "553:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 674,
							"src": "200:405:3",
							"usedErrors": []
						}
					],
					"src": "33:573:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.1.0/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							696
						]
					},
					"id": 697,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 696,
							"linearizedBaseContracts": [
								696
							],
							"name": "Context",
							"nameLocation": "572:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "648:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 680,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 679,
												"id": 682,
												"nodeType": "Return",
												"src": "658:17:4"
											}
										]
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:4"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "639:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:4"
									},
									"scope": 696,
									"src": "586:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "755:165:4",
										"statements": [
											{
												"expression": {
													"id": 689,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "765:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$696",
														"typeString": "contract Context"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "765:4:4"
											},
											{
												"expression": {
													"expression": {
														"id": 691,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "905:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "905:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 688,
												"id": 693,
												"nodeType": "Return",
												"src": "898:15:4"
											}
										]
									},
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "739:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 686,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:4"
									},
									"scope": 696,
									"src": "688:232:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 697,
							"src": "554:368:4",
							"usedErrors": []
						}
					],
					"src": "33:890:4"
				},
				"id": 4
			}
		}
	}
}